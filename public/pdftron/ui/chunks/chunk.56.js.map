{"version":3,"sources":["webpack:///./src/ui/src/components/AlignmentPopup/AlignmentPopup.scss?68f9","webpack:///./src/ui/src/components/AlignmentPopup/AlignmentPopup.scss","webpack:///./src/ui/src/components/AlignmentPopup/AlignmentPopup.js","webpack:///./src/ui/src/components/AlignmentPopup/AlignmentConfig.js","webpack:///./src/ui/src/components/AlignmentPopup/AlignmentPopupContainer.js","webpack:///./src/ui/src/components/AlignmentPopup/index.js"],"names":["api","content","__esModule","default","module","i","options","styleTag","window","isApryseWebViewerWebComponent","document","head","appendChild","webComponents","getElementsByTagName","length","findNestedWebComponents","tagName","root","elements","querySelectorAll","forEach","el","push","shadowRoot","clonedStyleTags","webComponent","onload","styleNode","innerHTML","cloneNode","exports","locals","propTypes","alignmentConfig","PropTypes","array","alignmentOnClick","func","backToMenuOnClick","distributeConfig","distributeOnClick","isAnnotation","bool","AlignmentPopup","_ref","t","_slicedToArray","useTranslation","renderButtonRow","title","config","onClick","React","createElement","className","map","ActionButton","key","img","icon","alignment","data-testid","classNames","Popup","AlignAnnotationPopup","dataElement","role","type","tabIndex","onKeyDown","annotationManager","core","getAnnotationManager","_annotationManager$Al","Alignment","StandardAlignmentTypes","LEFT","RIGHT","TOP","BOTTOM","_annotationManager$Al2","CenterAlignmentTypes","CENTER_VERTICAL","CENTER_HORIZONTAL","_annotationManager$Al3","DistributeAlignmentTypes","DISTRIBUTE_VERTICAL","DISTRIBUTE_HORIZONTAL","annotation","object","AlignmentPopupContainer","_useSelector2","useSelector","state","selectors","isElementOpen","DataElements","ANNOTATION_ALIGNMENT_POPUP","getActiveDocumentViewerKey","shallowEqual","isOpen","activeDocumentViewerKey","_useState2","useState","left","top","position","setPosition","popupRef","useRef","dispatch","useDispatch","useLayoutEffect","setPopupPosition","current","getAnnotationPopupPositionBasedOn","AlignAnnotationPopupContainer","open","closed","undefined","DataElementWrapper","style","_objectSpread","ref","annotManager","selectedAnnotations","getSelectedAnnotations","centerAnnotations","alignAnnotations","actions","closeElement","selectAnnotations","distributeAnnotations"],"mappings":"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","file":"chunks/chunk.56.js","sourcesContent":["var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./AlignmentPopup.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach((el) => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach((el) => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function() {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".open.AlignAnnotationPopupContainer{visibility:visible}.closed.AlignAnnotationPopupContainer{visibility:hidden}:host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.AlignAnnotationPopupContainer{position:absolute;z-index:70;display:flex;justify-content:center;align-items:center}.AlignAnnotationPopupContainer:empty{padding:0}.AlignAnnotationPopupContainer .buttons{display:flex}.AlignAnnotationPopupContainer .Button{margin:4px;width:32px;height:32px}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .AlignAnnotationPopupContainer .Button{width:42px;height:42px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .AlignAnnotationPopupContainer .Button{width:42px;height:42px}}.AlignAnnotationPopupContainer .Button:hover{background:var(--popup-button-hover)}.AlignAnnotationPopupContainer .Button:hover:disabled{background:none}.AlignAnnotationPopupContainer .Button .Icon{width:18px;height:18px}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .AlignAnnotationPopupContainer .Button .Icon{width:24px;height:24px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .AlignAnnotationPopupContainer .Button .Icon{width:24px;height:24px}}.is-vertical.AlignAnnotationPopupContainer .Button.main-menu-button{width:100%;border-radius:0;justify-content:flex-start;padding-inline-start:var(--padding-small);padding-inline-end:var(--padding-small);margin:0 0 var(--padding-tiny) 0}.is-vertical.AlignAnnotationPopupContainer .Button.main-menu-button:first-child{margin-top:var(--padding-tiny)}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .is-vertical.AlignAnnotationPopupContainer .Button.main-menu-button{width:100%;height:32px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .is-vertical.AlignAnnotationPopupContainer .Button.main-menu-button{width:100%;height:32px}}.is-vertical.AlignAnnotationPopupContainer .Button.main-menu-button .Icon{margin-inline-end:10px}.is-vertical.AlignAnnotationPopupContainer .Button.main-menu-button span{white-space:nowrap}@keyframes bottom-up{0%{transform:translateY(100%)}to{transform:translateY(0)}}@keyframes up-bottom{0%{transform:translateY(0)}to{transform:translateY(100%)}}.AlignAnnotationPopupContainer{border-radius:4px;box-shadow:0 0 3px 0 var(--document-box-shadow);background:var(--component-background)}.AlignAnnotationPopup.is-horizontal .contents{display:flex;grid-gap:16px;gap:16px;flex-direction:column;padding:16px}.AlignAnnotationPopup.is-horizontal .contents .back-to-menu-button{width:24px;height:24px}.AlignAnnotationPopup.is-horizontal .contents .back-to-menu-button .Icon{width:16px;height:16px}.AlignAnnotationPopup.is-horizontal .contents .divider{height:1px;width:100%;background:var(--divider)}.AlignAnnotationPopup.is-horizontal button{padding:0;margin:0;height:32px;width:32px}.AlignAnnotationPopup.is-horizontal button .Icon{width:24px;height:24px}.AlignAnnotationPopup.is-horizontal .button-row-container{display:flex;grid-gap:8px;gap:8px;flex-direction:column}.AlignAnnotationPopup.is-horizontal .button-row{display:flex;align-items:center;grid-gap:8px;gap:8px}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport ActionButton from 'components/ActionButton';\n\nimport './AlignmentPopup.scss';\n\nconst propTypes = {\n  alignmentConfig: PropTypes.array,\n  alignmentOnClick: PropTypes.func,\n  backToMenuOnClick: PropTypes.func,\n  distributeConfig: PropTypes.array,\n  distributeOnClick: PropTypes.func,\n  isAnnotation: PropTypes.bool,\n};\n\nconst AlignmentPopup = ({\n  alignmentConfig,\n  alignmentOnClick,\n  backToMenuOnClick,\n  distributeConfig,\n  distributeOnClick,\n  isAnnotation\n}) => {\n  const [t] = useTranslation();\n\n  const renderButtonRow = (title, config, onClick) => {\n    return (\n      <div className='button-row-container'>\n        <div>{t(title)}</div>\n        <div className=\"button-row\">\n          {config.map((config) => (\n            <ActionButton\n              key={config.title}\n              className=\"main-menu-button\"\n              title={t(config.title)}\n              img={config.icon}\n              onClick={() => {\n                onClick(config.alignment);\n              }}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  const renderTopSection = () => (\n    <div className=\"top-section\">\n      <div className=\"button-row\">\n        <ActionButton\n          className=\"back-to-menu-button\"\n          dataElement=\"backToMenuButton\"\n          title={t('action.backToMenu')}\n          img=\"ic_chevron_left_black_24px\"\n          onClick={backToMenuOnClick}\n        />\n        <div role=\"button\" type=\"button\" tabIndex=\"0\" onClick={backToMenuOnClick} onKeyDown={backToMenuOnClick}>{t('action.backToMenu')}</div>\n      </div>\n    </div>\n  );\n\n  const renderContents = () => (\n    <div className=\"contents\">\n      {renderTopSection()}\n      <div className=\"divider\" />\n      {renderButtonRow('alignmentPopup.alignment', alignmentConfig, alignmentOnClick)}\n      {renderButtonRow('alignmentPopup.distribute', distributeConfig, distributeOnClick)}\n    </div>\n  );\n\n  if (!isAnnotation) {\n    return null;\n  }\n\n  return (\n    <div\n      data-testid=\"alignment-annotation-element\"\n      className={classNames({\n        Popup: true,\n        AlignAnnotationPopup: true,\n        'is-horizontal': true\n      })}\n    >\n      {renderContents()}\n    </div>\n  );\n};\n\nAlignmentPopup.propTypes = propTypes;\n\nexport default AlignmentPopup;","import core from 'core';\n\nconst annotationManager = core.getAnnotationManager();\n\nconst { LEFT, RIGHT, TOP, BOTTOM } = annotationManager.Alignment.StandardAlignmentTypes;\nconst { CENTER_VERTICAL, CENTER_HORIZONTAL } = annotationManager.Alignment.CenterAlignmentTypes;\nconst { DISTRIBUTE_VERTICAL, DISTRIBUTE_HORIZONTAL } = annotationManager.Alignment.DistributeAlignmentTypes;\n\nconst alignmentConfig = [\n  {\n    alignment: LEFT,\n    icon: 'ic-alignment-left',\n    title: 'alignmentPopup.alignLeft',\n  },\n  {\n    alignment: CENTER_HORIZONTAL,\n    icon: 'ic-alignment-center-horizontal',\n    title: 'alignmentPopup.alignHorizontalCenter',\n  },\n  {\n    alignment: RIGHT,\n    icon: 'ic-alignment-right',\n    title: 'alignmentPopup.alignRight',\n  },\n  {\n    alignment: TOP,\n    icon: 'ic-alignment-top',\n    title: 'alignmentPopup.alignTop',\n  },\n  {\n    alignment: CENTER_VERTICAL,\n    icon: 'ic-alignment-center-vertical',\n    title: 'alignmentPopup.alignVerticalCenter',\n  },\n  {\n    alignment: BOTTOM,\n    icon: 'ic-alignment-bottom',\n    title: 'alignmentPopup.alignBottom',\n  }\n];\n\nconst distributeConfig = [\n  {\n    alignment: DISTRIBUTE_VERTICAL,\n    icon: 'ic-distribute-vertical',\n    title: 'alignmentPopup.distributeVertical',\n  },\n  {\n    alignment: DISTRIBUTE_HORIZONTAL,\n    icon: 'ic-distribute-horizontal',\n    title: 'alignmentPopup.distributeHorizontal',\n  }\n];\n\nexport {\n  alignmentConfig,\n  distributeConfig\n};","import actions from 'actions';\nimport classNames from 'classnames';\nimport core from 'core';\nimport React, { useState, useRef, useLayoutEffect } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { getAnnotationPopupPositionBasedOn } from 'helpers/getPopupPosition';\nimport PropTypes from 'prop-types';\nimport selectors from 'selectors';\n\nimport AlignmentPopup from './AlignmentPopup';\nimport './AlignmentPopup.scss';\nimport DataElementWrapper from '../DataElementWrapper';\nimport DataElements from 'src/constants/dataElement';\nimport { alignmentConfig, distributeConfig } from './AlignmentConfig';\n\nconst propTypes = {\n  annotation: PropTypes.object,\n};\n\nconst AlignmentPopupContainer = ({\n  annotation\n}) => {\n  const [\n    isOpen,\n    activeDocumentViewerKey\n  ] = useSelector(\n    (state) => [\n      selectors.isElementOpen(state, DataElements.ANNOTATION_ALIGNMENT_POPUP),\n      selectors.getActiveDocumentViewerKey(state),\n    ],\n    shallowEqual,\n  );\n\n  const [position, setPosition] = useState({ left: 0, top: 0 });\n  const popupRef = useRef();\n  const dispatch = useDispatch();\n\n  const alignmentOnClick = (alignment) => {\n    const annotManager = core.getAnnotationManager();\n    const selectedAnnotations = annotManager.getSelectedAnnotations();\n    if (alignment === 'centerHorizontal' || alignment === 'centerVertical') {\n      annotManager.Alignment.centerAnnotations(selectedAnnotations, alignment);\n    } else {\n      annotManager.Alignment.alignAnnotations(selectedAnnotations, alignment);\n    }\n    setPopupPosition();\n  };\n\n  const distributeOnClick = (alignment) => {\n    const annotManager = core.getAnnotationManager();\n    const selectedAnnotations = annotManager.getSelectedAnnotations();\n    annotManager.Alignment.distributeAnnotations(selectedAnnotations, alignment);\n    setPopupPosition();\n  };\n\n  const backToMenuOnClick = () => {\n    dispatch(actions.closeElement(DataElements.ANNOTATION_ALIGNMENT_POPUP));\n    const annotManager = core.getAnnotationManager();\n    const selectedAnnotations = annotManager.getSelectedAnnotations();\n    annotManager.selectAnnotations(selectedAnnotations);\n  };\n\n  useLayoutEffect(() => {\n    if (annotation || isOpen) {\n      setPopupPosition();\n    }\n  }, [annotation, isOpen, activeDocumentViewerKey]);\n\n  const setPopupPosition = () => {\n    if (annotation && popupRef.current) {\n      setPosition(getAnnotationPopupPositionBasedOn(annotation, popupRef, activeDocumentViewerKey));\n    }\n  };\n\n  const className = classNames({\n    Popup: true,\n    AlignAnnotationPopupContainer: true,\n    open: isOpen,\n    closed: !isOpen,\n  });\n\n  const isAnnotation = annotation !== undefined;\n\n  return (\n    <DataElementWrapper\n      dataElement={DataElements.ANNOTATION_ALIGNMENT_POPUP}\n      className={className}\n      style={{ ...position }}\n      ref={popupRef}\n    >\n      <AlignmentPopup\n        alignmentConfig={alignmentConfig}\n        alignmentOnClick={alignmentOnClick}\n        backToMenuOnClick={backToMenuOnClick}\n        distributeConfig={distributeConfig}\n        distributeOnClick={distributeOnClick}\n        isAnnotation={isAnnotation}\n      />\n    </DataElementWrapper>\n  );\n};\n\nAlignmentPopupContainer.propTypes = propTypes;\n\nexport default AlignmentPopupContainer;\n","import AlignmentPopupContainer from './AlignmentPopupContainer';\n\nexport default AlignmentPopupContainer;"],"sourceRoot":""}