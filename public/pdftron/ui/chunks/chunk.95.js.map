{"version":3,"sources":["webpack:///./src/ui/src/components/PageManipulationOverlay/PageRotationControls/PageRotationControls.js","webpack:///./src/ui/src/components/PageManipulationOverlay/PageRotationControls/PageRotationControlsContainer.js","webpack:///./src/ui/src/components/PageManipulationOverlay/PageRotationControls/index.js","webpack:///./src/ui/src/components/PageManipulationOverlay/CustomPageManipulationOperations/CustomPageManipulationOperations.js","webpack:///./src/ui/src/components/PageManipulationOverlay/CustomPageManipulationOperations/index.js","webpack:///./src/ui/src/components/PageManipulationOverlay/PageManipulationOverlay.js","webpack:///./src/ui/src/components/PageManipulationOverlay/PageManipulationOverlayContainer.js","webpack:///./src/ui/src/components/PageManipulationOverlay/index.js"],"names":["PageRotationControls","props","t","useTranslation","rotateClockwise","rotateCounterClockwise","React","createElement","Fragment","DataElementWrapper","dataElement","className","onClick","Button","title","img","role","propTypes","pageNumbers","PropTypes","arrayOf","number","warn","bool","PageRotationControlsContainer","dispatch","useDispatch","noPagesSelectedWarning","isMobile","actions","closeElement","DataElements","PAGE_MANIPULATION_OVERLAY","CustomPageManipulationOperations","header","operations","map","operation","key","renderIcon","InitialPageManipulationOverlay","_ref","children","pageManipulationOverlayItems","childrenArray","Children","toArray","item","index","type","component","find","child","concat","_extends","cloneElement","PageManipulationOverlay","closeOverlay","useCallback","setPageManipulationOverlayAlternativePosition","closeElements","document","core","getDocument","documentType","isXod","workerTypes","XOD","isOffice","OFFICE","LEGACY_OFFICE","filteredPageManipulationOverlayItems","removedIndices","reduce","acc","_ref2","_filteredPageManipula","_filteredPageManipula2","push","filter","_","includes","useEffect","addEventListener","removeEventListener","PageAdditionalControls","PageManipulationControls","PageManipulationOverlayContainer","_useSelector2","_slicedToArray","useSelector","state","selectors","getSelectedThumbnailPageIndexes","getCurrentPage","getPageManipulationOverlayItems","shallowEqual","selectedPageIndexes","currentPage","length","i","FlyoutMenu","menu","trigger","PAGE_MANIPULATION_OVERLAY_BUTTON","ariaLabel","aria-live"],"mappings":"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","file":"chunks/chunk.95.js","sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport DataElementWrapper from 'components/DataElementWrapper';\nimport Button from 'components/Button';\n\n\nfunction PageRotationControls(props) {\n  const { t } = useTranslation();\n  const { rotateClockwise, rotateCounterClockwise } = props;\n\n\n  return (\n    <>\n      <DataElementWrapper\n        dataElement=\"pageRotationHeader\"\n        className=\"type\"\n      >\n        {t('action.rotate')}\n      </DataElementWrapper>\n      <DataElementWrapper\n        dataElement=\"rotatePageClockwise\"\n        className=\"row\"\n        onClick={rotateClockwise}\n      >\n        <Button\n          title=\"option.thumbnailPanel.rotatePageClockwise\"\n          img=\"icon-header-page-manipulation-page-rotation-clockwise-line\"\n          role=\"option\"\n        />\n        <div className=\"title\">{t('option.thumbnailPanel.rotateClockwise')}</div>\n      </DataElementWrapper>\n      <DataElementWrapper\n        dataElement=\"rotatePageCounterClockwise\"\n        className=\"row\"\n        onClick={rotateCounterClockwise}\n      >\n        <Button\n          title=\"option.thumbnailPanel.rotatePageCounterClockwise\"\n          img=\"icon-header-page-manipulation-page-rotation-counterclockwise-line\"\n          role=\"option\"\n        />\n        <div className=\"title\">{t('option.thumbnailPanel.rotateCounterClockwise')}</div>\n      </DataElementWrapper>\n    </>\n  );\n}\n\nexport default PageRotationControls;","import React from 'react';\nimport PageRotationControls from './PageRotationControls';\nimport { noPagesSelectedWarning, rotateClockwise, rotateCounterClockwise } from 'helpers/pageManipulationFunctions';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport actions from 'actions';\nimport { isMobile } from 'helpers/device';\nimport DataElements from 'constants/dataElement';\n\nconst propTypes = {\n  pageNumbers: PropTypes.arrayOf(PropTypes.number),\n  warn: PropTypes.bool,\n};\n\nfunction PageRotationControlsContainer(props) {\n  const dispatch = useDispatch();\n  const { pageNumbers, warn } = props;\n\n  const onRotateCounterClockwise = () => {\n    if (warn) {\n      !noPagesSelectedWarning(pageNumbers, dispatch) && rotateCounterClockwise(pageNumbers);\n    } else {\n      rotateCounterClockwise(pageNumbers);\n    }\n    isMobile() && dispatch(actions.closeElement(DataElements.PAGE_MANIPULATION_OVERLAY));\n  };\n  const onRotateClockwise = () => {\n    if (warn) {\n      !noPagesSelectedWarning(pageNumbers, dispatch) && rotateClockwise(pageNumbers);\n    } else {\n      rotateClockwise(pageNumbers);\n    }\n    isMobile() && dispatch(actions.closeElement(DataElements.PAGE_MANIPULATION_OVERLAY));\n  };\n  return (\n    <PageRotationControls\n      rotateCounterClockwise={onRotateCounterClockwise}\n      rotateClockwise={onRotateClockwise}\n    />\n  );\n}\n\nPageRotationControlsContainer.propTypes = propTypes;\n\nexport default PageRotationControlsContainer;","import PageRotationControlsContainer from './PageRotationControlsContainer';\n\nexport default PageRotationControlsContainer;","import React from 'react';\nimport DataElementWrapper from 'components/DataElementWrapper';\nimport Button from 'components/Button';\n\nfunction CustomPageManipulationOperations(props) {\n  const { dataElement, pageNumbers, header, operations } = props;\n\n  function renderIcon(operation) {\n    if (operation.img) {\n      return (\n        <Button\n          title={operation.title}\n          img={operation.img}\n          role=\"option\"\n        />\n      );\n    }\n  }\n\n  return (\n    <>\n      <DataElementWrapper\n        dataElement={dataElement}\n        className=\"type\"\n      >\n        {header}\n      </DataElementWrapper>\n      {operations.map((operation) => {\n        return (\n          <DataElementWrapper\n            key={operation.dataElement}\n            className=\"row\"\n            dataElement={operation.dataElement}\n            onClick={() => operation.onClick(pageNumbers)}\n          >\n            {renderIcon(operation)}\n            <div className=\"title\">{operation.title}</div>\n          </DataElementWrapper>\n        );\n      })}\n    </>\n  );\n}\n\nexport default CustomPageManipulationOperations;","import CustomPageManipulationOperations from './CustomPageManipulationOperations';\n\nexport default CustomPageManipulationOperations;","import actions from 'actions';\nimport React, { useEffect, useCallback } from 'react';\nimport PageRotationControls from './PageRotationControls';\nimport PageManipulationControls from './PageManipulationControls';\nimport PageAdditionalControls from 'components/PageManipulationOverlay/PageAdditionalControls';\nimport CustomPageManipulationOperations from './CustomPageManipulationOperations';\nimport { workerTypes } from 'constants/types';\nimport core from 'core';\n\nimport { useDispatch } from 'react-redux';\nimport DataElements from 'src/constants/dataElement';\n\nfunction InitialPageManipulationOverlay({ children, pageNumbers, pageManipulationOverlayItems }) {\n  const childrenArray = React.Children.toArray(children);\n\n  return pageManipulationOverlayItems.map((item, index) => {\n    const { dataElement, type } = item;\n    let component = childrenArray.find((child) => child.props.dataElement === dataElement);\n    const key = dataElement || `${type}-${index}`;\n\n    if (!component) {\n      if (type === 'divider') {\n        component = <div className=\"divider\" />;\n      }\n\n      if (type === 'customPageOperation') {\n        component = <CustomPageManipulationOperations key={dataElement} pageNumbers={pageNumbers} {...item} />;\n      }\n    }\n\n    return component\n      ? React.cloneElement(component, {\n        key,\n      })\n      : null;\n  });\n}\n\n\nfunction PageManipulationOverlay(props) {\n  const { pageNumbers, pageManipulationOverlayItems } = props;\n\n  const dispatch = useDispatch();\n\n  const closeOverlay = useCallback(() => {\n    dispatch(actions.setPageManipulationOverlayAlternativePosition(null));\n    dispatch(actions.closeElements([DataElements.PAGE_MANIPULATION_OVERLAY]));\n  }, [dispatch]);\n\n  const document = core.getDocument();\n  const documentType = document?.type;\n  const isXod = documentType === workerTypes.XOD;\n  const isOffice = documentType === workerTypes.OFFICE || documentType === workerTypes.LEGACY_OFFICE;\n  let filteredPageManipulationOverlayItems = pageManipulationOverlayItems;\n  if (isXod || isOffice) {\n    const removedIndices = filteredPageManipulationOverlayItems.reduce((acc, { dataElement }, index) => {\n      if (dataElement === 'pageAdditionalControls') {\n        acc.push(index);\n        if (filteredPageManipulationOverlayItems[index + 1]?.type === 'divider') {\n          acc.push(index + 1);\n        }\n      }\n      if (dataElement === 'pageManipulationControls') {\n        acc.push(index);\n        if (filteredPageManipulationOverlayItems[index - 1]?.type === 'divider') {\n          acc.push(index - 1);\n        }\n      }\n      return acc;\n    }, []);\n    filteredPageManipulationOverlayItems = filteredPageManipulationOverlayItems.filter((_, index) => !removedIndices.includes(index));\n  }\n\n  useEffect(() => {\n    core.addEventListener('documentLoaded', closeOverlay);\n    return () => {\n      core.removeEventListener('documentLoaded', closeOverlay);\n    };\n  }, []);\n\n  return (\n    <InitialPageManipulationOverlay pageNumbers={pageNumbers} pageManipulationOverlayItems={filteredPageManipulationOverlayItems}>\n      { !isXod && !isOffice && <PageAdditionalControls pageNumbers={pageNumbers} dataElement=\"pageAdditionalControls\" /> }\n      <PageRotationControls pageNumbers={pageNumbers} dataElement=\"pageRotationControls\" />\n      { !isXod && !isOffice && <PageManipulationControls pageNumbers={pageNumbers} dataElement=\"pageManipulationControls\" /> }\n    </InitialPageManipulationOverlay>\n  );\n}\n\nexport default PageManipulationOverlay;","import React from 'react';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport PageManipulationOverlay from './PageManipulationOverlay';\nimport FlyoutMenu from '../FlyoutMenu/FlyoutMenu';\nimport selectors from 'selectors';\nimport DataElements from 'constants/dataElement';\nimport { useTranslation } from 'react-i18next';\n\nfunction PageManipulationOverlayContainer() {\n  const [\n    selectedPageIndexes,\n    currentPage,\n    pageManipulationOverlayItems,\n  ] = useSelector((state) => [\n    selectors.getSelectedThumbnailPageIndexes(state),\n    selectors.getCurrentPage(state),\n    selectors.getPageManipulationOverlayItems(state),\n  ], shallowEqual);\n\n  // If we start drilling this prop, maybe create a context\n  const pageNumbers = selectedPageIndexes.length > 0 ? selectedPageIndexes.map((i) => i + 1) : [currentPage];\n\n  const [t] = useTranslation();\n\n  return (\n    <FlyoutMenu\n      menu={DataElements.PAGE_MANIPULATION_OVERLAY}\n      trigger={DataElements.PAGE_MANIPULATION_OVERLAY_BUTTON}\n      ariaLabel={t('option.thumbnailPanel.moreOptionsMenu')}\n    >\n      <span className=\"visually-hidden\">\n        <p aria-live=\"assertive\" role=\"alert\"> {t('option.thumbnailPanel.moreOptionsMenu')}</p>\n      </span>\n      <PageManipulationOverlay\n        pageNumbers={pageNumbers}\n        pageManipulationOverlayItems={pageManipulationOverlayItems}\n      />\n    </ FlyoutMenu>\n  );\n}\n\nexport default PageManipulationOverlayContainer;","import PageManipulationOverlay from './PageManipulationOverlayContainer';\n\nexport default PageManipulationOverlay;"],"sourceRoot":""}