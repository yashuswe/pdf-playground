{"version":3,"sources":["webpack:///./src/ui/src/components/ModularComponents/PresetButton/buttons/SheetEditor/CellAdjustmentButton.js"],"names":["propTypes","type","PropTypes","string","isFlyoutItem","bool","dataElement","style","object","className","buttonType","img","title","CellAdjustmentButton","forwardRef","props","ref","_props$dataElement","menuItems","_props$img","icon","_props$title","handleClick","_core$getDocument","_core$getDocument$get","workbook","core","getDocument","getSpreadsheetEditorDocument","getWorkbook","activeSheet","getSheetAt","activeSheetIndex","console","error","selectedCellRange","getDocumentViewer","getSpreadsheetEditorManager","getSelectedCellRange","CELL_ADJUSTMENT_BUTTONS","INSERT_COLUMN_LEFT","createColumns","firstColumn","INSERT_COLUMN_RIGHT","lastColumn","INSERT_ROW_TOP","createRows","firstRow","INSERT_ROW_BOTTOM","lastRow","INSERT_COLUMN_SHIFT_DOWN","INSERT_COLUMN_SHIFT_RIGHT","rowIndex","row","getRowAt","columnIndex","createCell","DELETE_COLUMN","removeColumns","DELETE_ROW","removeRows","DELETE_COLUMN_SHIFT_UP","DELETE_COLUMN_SHIFT_LEFT","React","createElement","FlyoutItemContainer","_extends","onClick","additionalClass","ActionButton","key","isActive","ariaPressed","displayName"],"mappings":"gZAQA,IAAMA,EAAY,CAChBC,KAAMC,IAAUC,OAChBC,aAAcF,IAAUG,KACxBC,YAAaJ,IAAUC,OACvBI,MAAOL,IAAUM,OACjBC,UAAWP,IAAUC,OACrBO,WAAYR,IAAUC,OACtBQ,IAAKT,IAAUC,OACfS,MAAOV,IAAUC,QAKbU,EAAuBC,sBAAW,SAACC,EAAOC,GAC9C,IACEZ,EAQEW,EARFX,aACAH,EAOEc,EAPFd,KACAM,EAMEQ,EANFR,MACAE,EAKEM,EALFN,UACAC,EAIEK,EAJFL,WAAUO,EAIRF,EAHFT,mBAAW,IAAAW,EAAGC,IAAUR,GAAYJ,YAAWW,EAAAE,EAG7CJ,EAFFJ,IAAKS,OAAI,IAAAD,EAAGD,IAAUR,GAAYU,KAAID,EAAAE,EAEpCN,EADFH,aAAK,IAAAS,EAAGH,IAAUR,GAAYE,MAAKS,EAK/BC,EAAc,WAAM,IAAAC,EAAAC,EAClBC,EAA6B,QAArBF,EAAGG,IAAKC,qBAAa,IAAAJ,GAAgC,QAAhCC,EAAlBD,EAAoBK,sCAA8B,IAAAJ,OAAhC,EAAlBA,EAAoDK,cAC/DC,EAAcL,aAAQ,EAARA,EAAUM,WAAWN,EAASO,kBAClD,IAAKF,EACH,OAAOG,QAAQC,MApBP,2CAsBV,IAAMC,EAAoBT,IAAKU,oBAAoBC,8BAA8BC,uBAEjF,OAAQ5B,GACN,KAAK6B,IAAwBC,mBAE3B,YADAV,EAAYW,cAAcN,EAAkBO,YAAa,GAE3D,KAAKH,IAAwBI,oBAE3B,YADAb,EAAYW,cAAcN,EAAkBS,WAAa,EAAG,GAE9D,KAAKL,IAAwBM,eAE3B,YADAf,EAAYgB,WAAWX,EAAkBY,SAAU,GAErD,KAAKR,IAAwBS,kBAE3B,YADAlB,EAAYgB,WAAWX,EAAkBc,QAAU,EAAG,GAExD,KAAKV,IAAwBW,yBAE3B,OACF,KAAKX,IAAwBY,0BAE3B,IAAK,IAAIC,EAAWjB,EAAkBY,SAAUK,GAAYjB,EAAkBc,QAASG,IAErF,IADA,IAAMC,EAAMvB,EAAYwB,SAASF,GACxBG,EAAcpB,EAAkBO,YAAaa,GAAepB,EAAkBS,WAAYW,IACjGF,EAAIG,WAAWD,GAGnB,OACF,KAAKhB,IAAwBkB,cAE3B,YADA3B,EAAY4B,cAAcvB,EAAkBO,YAAaP,EAAkBS,WAAaT,EAAkBO,YAAc,GAE1H,KAAKH,IAAwBoB,WAE3B,YADA7B,EAAY8B,WAAWzB,EAAkBY,SAAUZ,EAAkBc,QAAUd,EAAkBY,SAAW,GAE9G,KAAKR,IAAwBsB,uBAG7B,KAAKtB,IAAwBuB,yBAG7B,QACE,SAIN,OACE1D,EACE2D,IAAAC,cAACC,IAAmBC,EAAA,GACdnD,EAAK,CACTC,IAAKA,EACLmD,QAAS7C,EACT8C,gBAAuC,MAGvCL,IAAAC,cAACK,IAAY,CACXC,IAAKrE,EACLsE,UA/DS,EAgETJ,QAAS7C,EACThB,YAAaA,EACbM,MAAOA,EACPD,IAAKS,EACLoD,aApES,EAqETjE,MAAOA,EACPE,UAAWA,OAMrBI,EAAqBb,UAAYA,EACjCa,EAAqB4D,YAAc,uBAEpB5D","file":"chunks/chunk.89.js","sourcesContent":["import React, { forwardRef } from 'react';\nimport ActionButton from 'components/ActionButton';\nimport PropTypes from 'prop-types';\nimport FlyoutItemContainer from '../../../FlyoutItemContainer';\nimport { menuItems } from '../../../Helpers/menuItems';\nimport { CELL_ADJUSTMENT_BUTTONS } from 'constants/customizationVariables';\nimport core from 'core';\n\nconst propTypes = {\n  type: PropTypes.string,\n  isFlyoutItem: PropTypes.bool,\n  dataElement: PropTypes.string,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  buttonType: PropTypes.string,\n  img: PropTypes.string,\n  title: PropTypes.string,\n};\n\nconst ERROR = 'SpreadsheetEditorDocument is not loaded';\n\nconst CellAdjustmentButton = forwardRef((props, ref) => {\n  const {\n    isFlyoutItem,\n    type,\n    style,\n    className,\n    buttonType,\n    dataElement = menuItems[buttonType].dataElement,\n    img: icon = menuItems[buttonType].icon,\n    title = menuItems[buttonType].title,\n  } = props;\n\n  const isActive = false;\n\n  const handleClick = () => {\n    const workbook = core.getDocument()?.getSpreadsheetEditorDocument()?.getWorkbook();\n    const activeSheet = workbook?.getSheetAt(workbook.activeSheetIndex);\n    if (!activeSheet) {\n      return console.error(ERROR);\n    }\n    const selectedCellRange = core.getDocumentViewer().getSpreadsheetEditorManager().getSelectedCellRange();\n\n    switch (buttonType) {\n      case CELL_ADJUSTMENT_BUTTONS.INSERT_COLUMN_LEFT:\n        activeSheet.createColumns(selectedCellRange.firstColumn, 1);\n        return;\n      case CELL_ADJUSTMENT_BUTTONS.INSERT_COLUMN_RIGHT:\n        activeSheet.createColumns(selectedCellRange.lastColumn + 1, 1);\n        return;\n      case CELL_ADJUSTMENT_BUTTONS.INSERT_ROW_TOP:\n        activeSheet.createRows(selectedCellRange.firstRow, 1);\n        return;\n      case CELL_ADJUSTMENT_BUTTONS.INSERT_ROW_BOTTOM:\n        activeSheet.createRows(selectedCellRange.lastRow + 1, 1);\n        return;\n      case CELL_ADJUSTMENT_BUTTONS.INSERT_COLUMN_SHIFT_DOWN:\n        // Finish once leadtools api is implemented\n        return;\n      case CELL_ADJUSTMENT_BUTTONS.INSERT_COLUMN_SHIFT_RIGHT:\n        // Ensure this works or adjust once Leadtools API is updated to work\n        for (let rowIndex = selectedCellRange.firstRow; rowIndex <= selectedCellRange.lastRow; rowIndex++) {\n          const row = activeSheet.getRowAt(rowIndex);\n          for (let columnIndex = selectedCellRange.firstColumn; columnIndex <= selectedCellRange.lastColumn; columnIndex++) {\n            row.createCell(columnIndex);\n          }\n        }\n        return;\n      case CELL_ADJUSTMENT_BUTTONS.DELETE_COLUMN:\n        activeSheet.removeColumns(selectedCellRange.firstColumn, selectedCellRange.lastColumn - selectedCellRange.firstColumn + 1);\n        return;\n      case CELL_ADJUSTMENT_BUTTONS.DELETE_ROW:\n        activeSheet.removeRows(selectedCellRange.firstRow, selectedCellRange.lastRow - selectedCellRange.firstRow + 1);\n        return;\n      case CELL_ADJUSTMENT_BUTTONS.DELETE_COLUMN_SHIFT_UP:\n        // Finish once leadtools api is implemented\n        return;\n      case CELL_ADJUSTMENT_BUTTONS.DELETE_COLUMN_SHIFT_LEFT:\n        // Finish once leadtools api is implemented\n        return;\n      default:\n        return;\n    }\n  };\n\n  return (\n    isFlyoutItem ?\n      <FlyoutItemContainer\n        {...props}\n        ref={ref}\n        onClick={handleClick}\n        additionalClass={isActive ? 'active' : ''}\n      />\n      : (\n        <ActionButton\n          key={type}\n          isActive={isActive}\n          onClick={handleClick}\n          dataElement={dataElement}\n          title={title}\n          img={icon}\n          ariaPressed={isActive}\n          style={style}\n          className={className}\n        />\n      )\n  );\n});\n\nCellAdjustmentButton.propTypes = propTypes;\nCellAdjustmentButton.displayName = 'CellAdjustmentButton';\n\nexport default CellAdjustmentButton;\n"],"sourceRoot":""}