{"version":3,"sources":["webpack:///./src/ui/src/components/ModularComponents/PresetButton/buttons/OfficeEditor/FontStyleToggleButton.js"],"names":["propTypes","styleType","PropTypes","oneOf","Object","values","STYLE_TOGGLE_OPTIONS","isRequired","isFlyoutItem","bool","dataElement","string","style","object","className","img","title","FontStyleToggleButton","forwardRef","props","ref","menuItem","menuItems","concat","_props$dataElement","_props$img","icon","_props$title","isActive","useSelector","state","selectors","isStyleButtonActive","handleClick","core","getOfficeEditor","updateSelectionAndCursorStyle","_defineProperty","React","createElement","FlyoutItemContainer","_extends","onClick","additionalClass","ActionButton","key","ariaPressed","displayName"],"mappings":"0nCAUA,IAAMA,EAAY,CAChBC,UAAWC,IAAUC,MAAMC,OAAOC,OAAOC,MAAuBC,WAChEC,aAAcN,IAAUO,KACxBC,YAAaR,IAAUS,OACvBC,MAAOV,IAAUW,OACjBC,UAAWZ,IAAUS,OACrBI,IAAKb,IAAUS,OACfK,MAAOd,IAAUS,QAGbM,EAAwBC,sBAAW,SAACC,EAAOC,GAC/C,IAAQZ,EAA8CW,EAA9CX,aAAcP,EAAgCkB,EAAhClB,UAAWW,EAAqBO,EAArBP,MAAOE,EAAcK,EAAdL,UAClCO,EAAWC,IAAU,GAADC,OAAItB,EAAS,WACvCuB,EAIIL,EAHFT,mBAAW,IAAAc,EAAGH,EAASX,YAAWc,EAAAC,EAGhCN,EAFFJ,IAAKW,OAAI,IAAAD,EAAGJ,EAASK,KAAID,EAAAE,EAEvBR,EADFH,aAAK,IAAAW,EAAGN,EAASL,MAAKW,EAElBC,EAAWC,aAAY,SAACC,GAAK,OAAKC,IAAUC,oBAAoBF,EAAO7B,MAEvEgC,EAAc,WAClBC,IAAKC,kBAAkBC,8BAA6BC,EAAC,GAAGpC,GAAY,KAGtE,OACEO,EACE8B,IAAAC,cAACC,IAAmBC,EAAA,GACdtB,EAAK,CACTC,IAAKA,EACLsB,QAAST,EACTU,gBAAiBf,EAAW,SAAW,MAGvCU,IAAAC,cAACK,IAAY,CACXC,IAAK5C,EACL2B,SAAUA,EACVc,QAAST,EACTvB,YAAaA,EACbM,MAAOA,EACPD,IAAKW,EACLoB,YAAalB,EACbhB,MAAOA,EACPE,UAAWA,OAMrBG,EAAsBjB,UAAYA,EAClCiB,EAAsB8B,YAAc,wBAErB9B","file":"chunks/chunk.88.js","sourcesContent":["import React, { forwardRef } from 'react';\nimport ActionButton from 'components/ActionButton';\nimport core from 'core';\nimport { useSelector } from 'react-redux';\nimport selectors from 'selectors';\nimport PropTypes from 'prop-types';\nimport FlyoutItemContainer from '../../../FlyoutItemContainer';\nimport { menuItems } from '../../../Helpers/menuItems';\nimport { STYLE_TOGGLE_OPTIONS } from 'src/constants/customizationVariables';\n\nconst propTypes = {\n  styleType: PropTypes.oneOf(Object.values(STYLE_TOGGLE_OPTIONS)).isRequired,\n  isFlyoutItem: PropTypes.bool,\n  dataElement: PropTypes.string,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  img: PropTypes.string,\n  title: PropTypes.string,\n};\n\nconst FontStyleToggleButton = forwardRef((props, ref) => {\n  const { isFlyoutItem, styleType, style, className } = props;\n  const menuItem = menuItems[`${styleType}Button`];\n  const {\n    dataElement = menuItem.dataElement,\n    img: icon = menuItem.icon,\n    title = menuItem.title,\n  } = props;\n  const isActive = useSelector((state) => selectors.isStyleButtonActive(state, styleType));\n\n  const handleClick = () => {\n    core.getOfficeEditor().updateSelectionAndCursorStyle({ [styleType]: true });\n  };\n\n  return (\n    isFlyoutItem ?\n      <FlyoutItemContainer\n        {...props}\n        ref={ref}\n        onClick={handleClick}\n        additionalClass={isActive ? 'active' : ''}\n      />\n      : (\n        <ActionButton\n          key={styleType}\n          isActive={isActive}\n          onClick={handleClick}\n          dataElement={dataElement}\n          title={title}\n          img={icon}\n          ariaPressed={isActive}\n          style={style}\n          className={className}\n        />\n      )\n  );\n});\n\nFontStyleToggleButton.propTypes = propTypes;\nFontStyleToggleButton.displayName = 'FontStyleToggleButton';\n\nexport default FontStyleToggleButton;"],"sourceRoot":""}