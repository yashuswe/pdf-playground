{"version":3,"sources":["webpack:///./src/ui/src/components/CalibrationModal/CalibrationModal.scss?9687","webpack:///./src/ui/src/components/CalibrationModal/CalibrationModal.scss","webpack:///./src/ui/src/helpers/evalFraction.js","webpack:///./src/ui/src/components/CalibrationModal/CalibrationModal.js","webpack:///./src/ui/src/components/CalibrationModal/index.js"],"names":["api","content","__esModule","default","module","i","options","styleTag","window","isApryseWebViewerWebComponent","document","head","appendChild","webComponents","getElementsByTagName","length","findNestedWebComponents","tagName","root","elements","querySelectorAll","forEach","el","push","shadowRoot","clonedStyleTags","webComponent","onload","styleNode","innerHTML","cloneNode","exports","locals","fraction","_fraction$split2","_slicedToArray","split","numerator","denominator","Number","parseMeasurementContentsByAnnotation","annotation","factor","Measure","axis","Scale","getLineLength","numberRegex","fractionRegex","pureFractionRegex","CalibrationModal","_useSelector2","useSelector","state","selectors","isElementOpen","DataElements","CALIBRATION_MODAL","isElementDisabled","getMeasurementUnits","shallowEqual","isOpen","isDisabled","units","dispatch","useDispatch","_useState2","useState","setAnnotation","_useState4","value","setValue","_useState6","newDistance","setNewDistance","_useState8","unitTo","setUnitTo","_useState0","showError","setShowError","t","useTranslation","inputRef","useRef","useEffect","_inputRef$current","current","focus","handleAnnotationsSelected","core","getSelectedAnnotations","onAnnotationSelected","annotations","action","addEventListener","removeEventListener","onAnnotationChanged","toFixed","mapAnnotationToKey","annot","parseFloat","handleLossOfPrecision","scale","getNewScale","currentDistance","ratio","currentScale","closeModal","actions","closeElements","React","createElement","Swipeable","onSwipedUp","onSwipedDown","preventDefaultTouchmoveEvent","className","classNames","Modal","open","closed","onMouseDown","e","stopPropagation","ref","type","onChange","target","onBlur","inputValue","trim","test","_inputValue$split2","whole","isFinite","evalFraction","number","to","map","unit","key","Button","dataElement","label","onClick","newScale","accurateNewScale","setAnnotationStyles","setToolStyles","disabled"],"mappings":"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","file":"chunks/chunk.58.js","sourcesContent":["var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./CalibrationModal.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach((el) => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach((el) => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function() {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".open.CalibrationModal{visibility:visible}.closed.CalibrationModal{visibility:hidden}:host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.CalibrationModal .footer .modal-button.confirm:hover{background:var(--primary-button-hover);border-color:var(--primary-button-hover);color:var(--gray-0)}.CalibrationModal .footer .modal-button.confirm{background:var(--primary-button);border-color:var(--primary-button);color:var(--primary-button-text)}.CalibrationModal .footer .modal-button.confirm.disabled{cursor:default;background:var(--disabled-button-color);color:var(--primary-button-text)}.CalibrationModal .footer .modal-button.confirm.disabled span{color:var(--primary-button-text)}.CalibrationModal .footer .modal-button.cancel:hover,.CalibrationModal .footer .modal-button.secondary-btn-custom:hover{border:none;box-shadow:inset 0 0 0 1px var(--blue-6);color:var(--blue-6)}.CalibrationModal .footer .modal-button.cancel,.CalibrationModal .footer .modal-button.secondary-btn-custom{border:none;box-shadow:inset 0 0 0 1px var(--primary-button);color:var(--primary-button)}.CalibrationModal .footer .modal-button.cancel.disabled,.CalibrationModal .footer .modal-button.secondary-btn-custom.disabled{cursor:default;border:none;box-shadow:inset 0 0 0 1px rgba(43,115,171,.5);color:rgba(43,115,171,.5)}.CalibrationModal .footer .modal-button.cancel.disabled span,.CalibrationModal .footer .modal-button.secondary-btn-custom.disabled span{color:rgba(43,115,171,.5)}.CalibrationModal{position:fixed;inset-inline-start:0;inset-block-end:0;z-index:100;width:100%;height:100%;display:flex;justify-content:center;align-items:center;background:var(--modal-negative-space)}.CalibrationModal .modal-container .wrapper .modal-content{padding:10px}.CalibrationModal .footer{display:flex;flex-direction:row;justify-content:flex-end;width:100%;margin-top:13px}.CalibrationModal .footer.modal-footer{padding:16px;margin:0;border-top:1px solid var(--divider)}.CalibrationModal .footer .modal-button{display:flex;justify-content:center;align-items:center;padding:6px 18px;margin:8px 0 0;width:auto;width:-moz-fit-content;width:fit-content;border-radius:4px;height:30px;cursor:pointer}.CalibrationModal .footer .modal-button.confirm{margin-inline-start:4px}.CalibrationModal .footer .modal-button.secondary-btn-custom{border-radius:4px;padding:2px 20px 4px;cursor:pointer}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .CalibrationModal .footer .modal-button{padding:23px 8px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .CalibrationModal .footer .modal-button{padding:23px 8px}}.CalibrationModal .swipe-indicator{background:var(--swipe-indicator-bg);border-radius:2px;height:4px;width:38px;position:absolute;inset-block-start:12px;margin-inline-start:auto;margin-inline-end:auto;inset-inline-start:0;inset-inline-end:0}@media(min-width:641px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .CalibrationModal .swipe-indicator{display:none}}@container (min-width: 641px){.App.is-web-component:not(.is-in-desktop-only-mode) .CalibrationModal .swipe-indicator{display:none}}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .CalibrationModal .swipe-indicator{width:32px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .CalibrationModal .swipe-indicator{width:32px}}.CalibrationModal .container{border-radius:4px;overflow-y:auto;max-height:100%}@media(max-height:500px){.App:not(.is-web-component) .CalibrationModal .container,.CalibrationModal .App:not(.is-web-component) .container{overflow:auto;max-height:100%}}@container (max-height: 500px){.App.is-web-component .CalibrationModal .container,.CalibrationModal .App.is-web-component .container{overflow:auto;max-height:100%}}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .CalibrationModal .container,.CalibrationModal .App:not(.is-in-desktop-only-mode):not(.is-web-component) .container{width:100%;position:fixed;inset-inline-start:0;inset-block-end:0;padding-top:4px;min-width:100px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .CalibrationModal .container,.CalibrationModal .App.is-web-component:not(.is-in-desktop-only-mode) .container{width:100%;position:fixed;inset-inline-start:0;inset-block-end:0;padding-top:4px;min-width:100px}}.CalibrationModal .container{display:flex;flex-direction:column;min-width:400px;box-shadow:0 0 3px 0 var(--document-box-shadow);padding:8px;background:var(--component-background)}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .CalibrationModal .container{padding-top:24px;padding-bottom:16px;padding-inline-start:24px;padding-inline-end:24px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .CalibrationModal .container{padding-top:24px;padding-bottom:16px;padding-inline-start:24px;padding-inline-end:24px}}.CalibrationModal .container .calibration__header{font-size:16px;margin-top:8px;margin-bottom:8px}.CalibrationModal .container .calibration__body{padding-top:8px}.CalibrationModal .container .calibration__body .calibration__input{margin-top:8px;display:flex;flex-direction:row;justify-content:space-between}.CalibrationModal .container .calibration__body input{width:100%;height:30px;font-size:13px;padding-inline-start:8px;border:1px solid var(--border);border-radius:4px;color:var(--text-color);padding-bottom:6px;padding-inline-end:42px;padding-top:4px;margin-inline-end:8px}.CalibrationModal .container .calibration__body input:focus{outline:none;border:1px solid var(--focus-border)}.CalibrationModal .container .calibration__body input::-moz-placeholder{color:var(--placeholder-text)}.CalibrationModal .container .calibration__body input::placeholder{color:var(--placeholder-text)}.CalibrationModal .container .calibration__body .error{border:1px solid var(--error-border-color)}.CalibrationModal .container .calibration__body .unitToInput{height:29px;width:45px;border-radius:5px;border:1px solid var(--border);font-size:13px}.CalibrationModal .container .calibration__body .unitToInput:focus{outline:none;border:1px solid var(--focus-border)}.CalibrationModal .container .calibration__body .unitToInput::-moz-placeholder{color:var(--placeholder-text)}.CalibrationModal .container .calibration__body .unitToInput::placeholder{color:var(--placeholder-text)}.CalibrationModal .container .calibration__body .errorMeasurement{font-size:13px;margin-top:8px;margin-bottom:8px;color:var(--error-text-color);max-width:400px}.CalibrationModal .container .calibration__footer{display:flex;justify-content:flex-end;margin-top:8px}.CalibrationModal .container .calibration__footer .Button{display:flex;justify-content:center;align-items:center;color:var(--primary-button-text);font-weight:600;padding:6px 18px;margin-top:8px;margin-inline-start:5px;width:auto;width:-moz-fit-content;width:fit-content;background:var(--primary-button);border-radius:4px;height:30px;cursor:pointer}.CalibrationModal .container .calibration__footer .Button:hover{background:var(--primary-button-hover)}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","export default (fraction) => {\n  const [numerator, denominator] = fraction.split('/');\n  return Number(numerator) / Number(denominator);\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport classNames from 'classnames';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport Button from 'components/Button';\nimport core from 'core';\nimport { mapAnnotationToKey } from 'constants/map';\nimport setToolStyles from 'helpers/setToolStyles';\nimport evalFraction from 'helpers/evalFraction';\nimport actions from 'actions';\nimport selectors from 'selectors';\nimport { Swipeable } from 'react-swipeable';\nimport DataElements from 'constants/dataElement';\n\nimport './CalibrationModal.scss';\n\nconst parseMeasurementContentsByAnnotation = (annotation) => {\n  const factor = annotation.Measure.axis[0].factor;\n  const unit = annotation.Scale[1][1];\n\n  switch (unit) {\n    case 'ft-in':\n      return (annotation.getLineLength() * factor / 12);\n    case 'in':\n    default:\n      return (annotation.getLineLength() * factor);\n  }\n};\n\nconst numberRegex = /^\\d*(\\.\\d*)?$/;\nconst fractionRegex = /^\\d*(\\s\\d\\/\\d*)$/;\nconst pureFractionRegex = /^(\\d\\/\\d*)*$/;\n\nconst CalibrationModal = () => {\n  const [isOpen, isDisabled, units] = useSelector(\n    (state) => [\n      selectors.isElementOpen(state, DataElements.CALIBRATION_MODAL),\n      selectors.isElementDisabled(state, DataElements.CALIBRATION_MODAL),\n      selectors.getMeasurementUnits(state),\n    ],\n    shallowEqual\n  );\n  const dispatch = useDispatch();\n  const [annotation, setAnnotation] = useState(null);\n  const [value, setValue] = useState('');\n  const [newDistance, setNewDistance] = useState(0);\n  const [unitTo, setUnitTo] = useState('');\n  const [showError, setShowError] = useState(false);\n  const [t] = useTranslation();\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    isOpen && inputRef?.current?.focus();\n    handleAnnotationsSelected(core.getSelectedAnnotations());\n  }, [isOpen]);\n\n  useEffect(() => {\n    const onAnnotationSelected = (annotations, action) => {\n      if (action === 'selected') {\n        handleAnnotationsSelected(annotations);\n      } else if (action === 'deselected') {\n        setAnnotation(null);\n        setValue('');\n        setUnitTo('');\n        setNewDistance(0);\n      }\n    };\n\n    core.addEventListener('annotationSelected', onAnnotationSelected);\n\n    return () => core.removeEventListener('annotationSelected', onAnnotationSelected);\n  }, []);\n\n  useEffect(() => {\n    const onAnnotationChanged = (annotations, action) => {\n      if (\n        action === 'modify' &&\n        annotations.length === 1 &&\n        annotations[0] === annotation\n      ) {\n        setValue(parseMeasurementContentsByAnnotation(annotation).toFixed(2));\n        setUnitTo(annotation.Scale[1][1]);\n      }\n    };\n\n    core.addEventListener('annotationChanged', onAnnotationChanged);\n    return () => core.removeEventListener('annotationChanged', onAnnotationChanged);\n  }, [annotation]);\n\n  const handleAnnotationsSelected = (annotations) => {\n    if (\n      annotations?.length === 1 &&\n      mapAnnotationToKey(annotations[0]) === 'distanceMeasurement'\n    ) {\n      const annot = annotations[0];\n      setAnnotation(annot);\n      const value = parseMeasurementContentsByAnnotation(annot).toFixed(2);\n      setValue(value);\n      setUnitTo(annot.Scale[1][1]);\n      // initial new distance should be the same as the value\n      // in case the user doesn't change the input value\n      setNewDistance(parseFloat(value));\n    }\n  };\n\n  const handleInputChange = (e) => {\n    setShowError(false);\n    setValue(e.target.value);\n  };\n  const validateInput = (e) => {\n    const inputValue = e.target.value.trim();\n    if (inputValue === '') {\n      setShowError(true);\n    }\n    if (numberRegex.test(inputValue)) {\n      const newDistance = parseFloat(inputValue);\n      if (newDistance !== 0) {\n        setNewDistance(parseFloat(inputValue));\n        setValue(inputValue);\n      } else {\n        setShowError(true);\n      }\n    } else if (fractionRegex.test(inputValue)) {\n      const [whole, fraction] = inputValue.split(' ');\n      if (Number.isFinite(evalFraction(fraction))) {\n        const number = Number(whole) + evalFraction(fraction);\n        setNewDistance(parseFloat(number));\n        setValue(number);\n      } else {\n        setShowError(true);\n      }\n    } else if (pureFractionRegex.test(inputValue)) {\n      if (Number.isFinite(evalFraction(inputValue))) {\n        const number = evalFraction(inputValue);\n        setNewDistance(parseFloat(number));\n        setValue(number);\n      } else {\n        setShowError(true);\n      }\n    } else {\n      setShowError(true);\n    }\n  };\n\n  const handleSelectChange = (e) => {\n    setUnitTo(e.target.value);\n  };\n  const handleApply = () => {\n    const newScale = getNewScale();\n    const accurateNewScale = handleLossOfPrecision(newScale);\n\n    core.setAnnotationStyles(annotation, {\n      Scale: accurateNewScale,\n    });\n\n    // this will also set the Scale for the other two measurement tools\n    setToolStyles(\n      'AnnotationCreateDistanceMeasurement',\n      'Scale',\n      accurateNewScale\n    );\n\n    dispatch(actions.closeElements([DataElements.CALIBRATION_MODAL]));\n  };\n\n  const handleLossOfPrecision = (scale) => {\n    // when the new distance that's entered in the modal is much bigger than the current distance, loss of precision can happen\n    // because internally WebViewer will do several multiplications and divisions to get the value to store in a measure dictionary\n    // in this case, setting 'Scale' again should fix this issue because this time the new distance and the current distance is very close, and we should get the accurate scale\n    annotation.Scale = scale;\n\n    return getNewScale();\n  };\n\n  const getNewScale = () => {\n    const currentDistance = parseMeasurementContentsByAnnotation(annotation);\n    const ratio = newDistance / currentDistance;\n\n    const currentScale = annotation.Scale;\n    const newScale = [\n      [currentScale[0][0], currentScale[0][1]],\n      [currentScale[1][0] * ratio, unitTo],\n    ];\n\n    return newScale;\n  };\n\n  const closeModal = () => {\n    dispatch(actions.closeElements([DataElements.CALIBRATION_MODAL]));\n  };\n  return isDisabled || !annotation ? null : (\n    <Swipeable\n      onSwipedUp={closeModal}\n      onSwipedDown={closeModal}\n      preventDefaultTouchmoveEvent\n    >\n      <div\n        className={classNames({\n          Modal: true,\n          CalibrationModal: true,\n          open: isOpen,\n          closed: !isOpen,\n        })}\n        onMouseDown={closeModal}\n      > <div className=\"container\" onMouseDown={(e) => e.stopPropagation()}>\n          <div className=\"swipe-indicator\" />\n          <div className=\"calibration__header\">\n            {t('component.calibration')}\n          </div>\n          <div className=\"calibration__body\">\n            <div>{t('message.enterMeasurement')}</div>\n            <div className=\"calibration__input\">\n              <input\n                className={showError ? 'error' : ''}\n                ref={inputRef}\n                type=\"text\"\n                value={value}\n                onChange={handleInputChange}\n                onBlur={validateInput}\n              />\n              <select\n                className=\"unitToInput\"\n                value={unitTo}\n                onChange={handleSelectChange}\n              >\n                {units.to.map((unit) => (\n                  <option key={unit} value={unit}>\n                    {unit}\n                  </option>\n                ))}\n              </select>\n            </div>\n            {showError ? <div className=\"errorMeasurement\">{t('message.errorEnterMeasurement')}</div> : null}\n          </div>\n          <div className=\"calibration__footer\">\n            <Button\n              dataElement=\"passwordSubmitButton\"\n              label={t('action.apply')}\n              onClick={handleApply}\n              disabled={showError}\n            />\n          </div>\n        </div>\n      </div>\n    </Swipeable>\n  );\n};\n\nexport default CalibrationModal;\n","import CalibrationModal from './CalibrationModal';\n\nexport default CalibrationModal;"],"sourceRoot":""}