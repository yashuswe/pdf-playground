{"version":3,"sources":["webpack:///./src/ui/src/components/SignaturePanel/WidgetInfo/WidgetInfo.scss?cec5","webpack:///./src/ui/src/components/SignaturePanel/WidgetInfo/WidgetInfo.scss","webpack:///./src/ui/src/components/SignaturePanel/SignaturePanel.scss?3267","webpack:///./src/ui/src/components/SignaturePanel/SignaturePanel.scss","webpack:///./src/ui/src/helpers/setVerificationResult.js","webpack:///./src/ui/src/components/SignaturePanel/WidgetLocator/WidgetLocator.js","webpack:///./src/ui/src/components/SignaturePanel/WidgetLocator/index.js","webpack:///./src/ui/src/components/SignaturePanel/WidgetInfo/WidgetInfo.js","webpack:///./src/ui/src/components/SignaturePanel/WidgetInfo/index.js","webpack:///./src/ui/src/components/SignaturePanel/SignaturePanel.js","webpack:///./src/ui/src/components/SignaturePanel/index.js","webpack:///./src/ui/src/components/SignaturePanel/SignatureIcon/SignatureIcon.scss?804c","webpack:///./src/ui/src/components/SignaturePanel/SignatureIcon/SignatureIcon.scss","webpack:///./src/ui/src/components/SignatureValidationModal/SignatureValidationModal.scss?6a5f","webpack:///./src/ui/src/components/SignatureValidationModal/SignatureValidationModal.scss","webpack:///./src/ui/src/components/SignaturePanel/SignatureIcon/SignatureIcon.js","webpack:///./src/ui/src/components/SignaturePanel/SignatureIcon/index.js","webpack:///./src/ui/src/components/SignatureValidationModal/SignatureValidationModal.js","webpack:///./src/ui/src/components/SignatureValidationModal/index.js"],"names":["api","content","__esModule","default","module","i","options","styleTag","window","isApryseWebViewerWebComponent","document","head","appendChild","webComponents","getElementsByTagName","length","findNestedWebComponents","tagName","root","elements","querySelectorAll","forEach","el","push","shadowRoot","clonedStyleTags","webComponent","onload","styleNode","innerHTML","cloneNode","exports","locals","e","t","r","Symbol","n","iterator","o","toStringTag","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_ref","_callee","doc","certificates","trustLists","currentLanguage","revocationChecking","revocationProxyPrefix","dispatch","verificationResult","_context","getVerificationResult","actions","setVerificationResult","_x","_x2","_x3","_x4","_x5","_x6","_x7","_ref2","_callee5","PDFNet","VerificationResult","TrustStatus","DigestStatus","ModificationPermissionsStatus","DocumentStatus","verificationResults","_context6","Core","runWithCleanup","_callee4","opts","_iterator","_step","_loop","_iterator2","_step2","trustList","trustListDataStructure","supportedDataStructures","fdfDocBuffer","fdf","fieldIterator","field","digitalSigField","result","id","signer","signTime","documentPermission","isCertification","contactInfo","location","reason","validAtTimeOfSigning","signerName","issuerField","subjectField","signed","subFilter","signerCert","retrievedSubjectField","verificationStatus","documentStatus","digestStatus","trustStatus","permissionStatus","digestAlgorithm","disallowedChanges","validSignerIdentity","trustVerificationResultString","trustVerificationResultBoolean","timeOfTrustVerificationEnum","trustVerificationTime","trustVerificationResult","epochTrustVerificationTime","certPath","firstX509Cert","retrievedIssuerField","processedIssuerField","_retrievedSubjectField","_processedSubjectField","lastX509Cert","notBeforeEpochTime","notAfterEpochTime","badgeIcon","fieldName","_t8","_t9","_t0","_t1","_t10","_t11","_t12","_t13","_t14","_t15","_t16","_t17","_context5","getPDFDoc","VerificationOptions","SecurityLevel","e_compatibility_and_archiving","enableOnlineCRLRevocationChecking","setRevocationProxyPrefix","undefined","_createForOfIteratorHelper","certificate","fileReader","arrayBufferPromise","_t4","_t5","_t6","_t7","_context4","addTrustedCertificateFromURL","console","error","concat","File","toString","FileReader","reject","addEventListener","_ref5","_callee3","_context3","Uint8Array","target","_x13","readAsArrayBuffer","addTrustedCertificate","ArrayBuffer","Int8Array","Uint8ClampedArray","s","_regeneratorValues","constructor","name","arrayBuffer","includes","join","FDFDoc","createFromMemoryBuffer","loadTrustList","getFieldIteratorBegin","hasNext","current","isValid","getType","Field","Type","e_signature","DigitalSignatureField","createFromField","verify","getSDFObj","getObjNum","hasCryptographicSignature","getSubFilter","SubFilterType","e_adbe_pkcs7_detached","getSignerCertFromCMS","getSubjectField","processX501DistinguishedName","e_ETSI_RFC3161","getSignatureName","getContactInfo","getSigningTime","formatPDFNetDate","getLocation","getReason","getDocumentPermissions","getVerificationStatus","getDocumentStatus","getDigestStatus","getTrustStatus","getPermissionsStatus","getDigestAlgorithm","getDisallowedChanges","map","_ref4","_callee2","change","_t","_t2","_context2","getTypeAsString","objnum","type","_x12","all","e_trust_verified","hasTrustVerificationResult","getTrustVerificationResult","wasSuccessful","getResultString","getTimeOfTrustVerificationEnum","getTimeOfTrustVerification","formatDate","getCertPath","getIssuerField","assign","processedSubjectField","getNotBeforeEpochTime","getNotAfterEpochTime","warn","e_no_error","e_digest_verified","e_digest_verification_disabled","e_no_trust_status","e_unmodified","e_has_allowed_changes","e_permissions_verification_disabled","e_commonName","getName","next","_x8","_x9","_x0","_x1","_x10","_x11","date","year","month","day","hour","minute","second","Date","UTC","toLocaleDateString","replace","weekday","timeZoneName","epochTime","setUTCSeconds","_ref6","_callee6","x501DistinguishedNameObject","processedObject","allAttributeAndValues","_iterator3","_step3","x501AttributeTypeAndValue","objectIdentifier","key","_t18","_context7","getAllAttributesAndValues","getAttributeTypeOID","getRawValue","getStringValue","translateObjectIdentifierBotanOID","_x14","objectIdentifierOIDenum","JSON","stringify","WidgetLocator","rect","_useState2","_slicedToArray","useState","show","setShow","useEffect","scrollViewContainer","core","getScrollViewElement","handleScroll","removeEventListener","setTimeout","ReactDOM","createPortal","React","createElement","style","position","top","y1","left","x1","width","x2","height","y2","border","zIndex","getRootNode","querySelector","renderPermissionStatus","translate","DigestStatusErrorCodes","e_digest_invalid","permissionMessages","_defineProperty","e_invalidated_by_disallowed_changes","e_no_permissions_status","e_unsupported_permissions_features","propTypes","PropTypes","string","isRequired","onClick","func","instanceOf","Annotations","Forms","WidgetInfo","verificationType","useSelector","state","selectors","locatorRect","setLocatorRect","_useState4","signatureDetailsExpanded","setSignatureDetailsExpanded","_window$Core$PDFNet","TimeMode","useTranslation","useDispatch","titleInteraction","widgets","widget","jumpToAnnotation","_core$getScrollViewEl","scrollLeft","scrollTop","getRect","windowTopLeft","getDisplayModeObject","pageToWindow","x","PageNumber","windowBottomRight","jumpToWidget","openSignatureModalWithFocus","useFocusHandler","setSignatureValidationModalWidgetName","openElement","className","Fragment","PanelListItem","labelHeader","iconGlyph","useI18String","onKeyDown","tabIndex","_ref3","verificationTimeMessage","e_current","e_signing","e_timestamp","renderTrustVerification","data-element","aria-label","Button","img","classNames","arrow","expanded","ariaExpanded","isActive","ariaLabel","Array","isArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_arrayLikeToArray","slice","from","test","SignaturePanel","fields","setFields","showSpinner","setShowSpinner","_useState6","certificateErrorMessage","setCertificateErrorMessage","_useState8","getDocument","setDocument","_useSelector2","isElementDisabled","getCertificates","getTrustLists","getCurrentLanguage","getIsRevocationCheckingEnabled","getRevocationProxyPrefix","isDisabled","onDocumentLoaded","onDocumentUnloaded","useCallback","onAnnotationChanged","annotations","action","isInFormCreationMode","getAnnotationManager","getFormFieldCreationManager","isInFormFieldCreationMode","addSignatureWidgetAnnotations","getAnnotationsList","removeAnnotations","addNonSignedFields","currentAnnotations","currentFields","annotation","SignatureWidgetAnnotation","getField","newSet","Set","_toConsumableArray","removeMatchingWidget","WidgetAnnotation","annotationManager","widgetToDelete","filter","annotationToFilter","getCustomData","Id","deleteAnnotations","resetFields","getAnnotationsLoadedPromise","fieldManager","getFieldManager","keys","message","Spinner","inPanel","Icon","glyph","panelData","panelNames","SIGNATURE","icon","renderLoadingOrErrors","index","collapsible","badge","size","SignatureIcon","_ref$size","SignatureValidationModal","validationModalWidgetName","digitalSignatureValidation","isElementOpen","DataElements","SIGNATURE_VALIDATION_MODAL","shallowEqual","isOpen","closeModal","useFocusOnClose","closeElements","SIGNATURE_MODAL","LOADING_MODAL","PRINT_MODAL","ERROR_MODAL","PASSWORD_MODAL","typeCapitalized","DigestAlgorithm","Modal","open","closed","ModalWrapper","title","closeHandler","onCloseClick","swipeToClose","status","interpolation","escapeValue","renderSignatureSummary","editor","DocumentPermissions","e_no_changes_allowed","e_formfilling_signing_allowed","e_annotating_formfilling_signing_allowed","e_unrestricted","renderDocumentPermission","e_untrusted","e_trust_verification_disabled","renderTrustStatus","e_corrupt_file","e_unsigned","e_bad_byteranges","e_corrupt_cryptographic_contents","renderDocumentStatus","e_weak_digest_algorithm_but_digest_verifiable","e_no_digest_status","e_unsupported_encoding","renderDigestStatus","e_SHA1","e_SHA256","e_SHA384","e_SHA512","e_RIPEMD160","e_unknown_digest_algorithm","renderDigestAlgorithm","label"],"mappings":"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","file":"chunks/chunk.42.js","sourcesContent":["var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../../node_modules/sass-loader/dist/cjs.js!./WidgetInfo.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach((el) => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach((el) => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function() {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".signature-widget-info{--widget-header-indent:49px;--widget-body-indent:22px;--arrow-width:12px;padding:4px;display:flex;flex-direction:column;font-size:13px;margin-bottom:10px;margin-inline-start:5px;box-sizing:border-box;border:1px solid transparent;cursor:pointer;--border-radius-amount:4px;-moz-border-radius-topleft:var(--border-radius-amount);-moz-border-radius-topright:var(--border-radius-amount);-moz-border-radius-bottomright:var(--border-radius-amount);-moz-border-radius-bottomleft:var(--border-radius-amount);border-radius:var(--border-radius-amount)}.signature-widget-info p+p{margin:1em 0 0}.signature-widget-info p.result-for-header{margin-top:0}.signature-widget-info p.bold{font-weight:700;margin-bottom:4px}.signature-widget-info p.underline{text-decoration:underline}.signature-widget-info .signatureProperties{padding:0;margin:0}.signature-widget-info .signatureProperties:focus,.signature-widget-info .signatureProperties:hover{color:var(--blue-5)}.signature-widget-info .link{cursor:pointer;outline:none;border:0;background-color:transparent;white-space:nowrap}.signature-widget-info .link.focus-visible,.signature-widget-info .link:focus-visible{outline:var(--focus-visible-outline)}.signature-widget-info .link p{margin:0;padding:0}.signature-widget-info .panel-list-text-container{height:100%}.signature-widget-info .panel-list-text-container .panel-list-label-header .Button span{text-align:start;overflow:visible;white-space:normal;text-overflow:inherit}.signature-widget-info .panel-list-icon-container .Icon{width:20px;height:20px}.signature-widget-info .title{padding-inline-start:4px;font-weight:700;display:flex;align-items:center;margin-block-start:0;margin-block-end:0;min-height:32px;margin-top:-5px;margin-bottom:-5px;overflow:hidden;border:0;background-color:transparent}.signature-widget-info .title button+*,.signature-widget-info .title div+*{margin-inline-start:2px}.signature-widget-info .title .arrow{min-width:var(--arrow-width);transition:transform .1s ease;margin-top:0;background-color:transparent;border:none;padding:0;display:flex;justify-content:center;align-items:center}.signature-widget-info .title .arrow.expanded{transform:rotate(90deg)}.signature-widget-info .title .arrow .Icon{width:var(--arrow-width);height:var(--arrow-width)}.signature-widget-info .title .arrow.hidden{visibility:hidden;padding:23px}.signature-widget-info .title .arrow:hover .Icon{color:var(--blue-6)}.signature-widget-info .title .arrow.focus-visible,.signature-widget-info .title .arrow:focus-visible{outline:var(--focus-visible-outline)}.signature-widget-info .title .signature-icon{margin-inline-end:5px}.signature-widget-info .title.focus-visible,.signature-widget-info .title:focus-visible{outline:var(--focus-visible-outline)}.signature-widget-info .header{margin-inline-start:32px}.signature-widget-info .header ul{padding-inline-start:24px}.signature-widget-info .header .body>div:first-child>p:first-child,.signature-widget-info .header .body>p:first-child{margin-top:.5em}.signature-widget-info .header .body>div:last-child{margin-bottom:.5em}.signature-widget-info .header-with-arrow{margin-inline-start:0}.signature-widget-info .header-with-arrow ul{margin-inline-start:var(--arrow-width)}.signature-widget-info .header-with-arrow ul li{margin-inline-start:18px}.signature-widget-info .panel-list-label-header button{font-weight:700;font-size:13px}.signature-widget-info .signatureDetails,.signature-widget-info .verificationDetails{cursor:default;padding:0;background-color:transparent;border:none;text-align:start}\", \"\"]);\n\n// exports\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./SignaturePanel.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach((el) => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach((el) => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function() {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.SignaturePanel{z-index:65;transition:transform .3s ease,visibility 0s ease .3s}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .SignaturePanel{inset-block-start:0;width:100%;height:100%}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .SignaturePanel{inset-block-start:0;width:100%;height:100%}}.open.SignaturePanel{transform:none;visibility:visible;transition:transform .3s ease,visibility 0s ease 0s}.SignaturePanel .empty-panel-container{display:flex;flex-direction:column;align-items:center;justify-content:center;height:100%;width:100%;padding:36px;grid-gap:8px;gap:8px}.SignaturePanel .empty-panel-container .empty-icon{width:60px;height:60px;color:var(--gray-6);fill:var(--gray-6)}.SignaturePanel .empty-panel-container .empty-icon svg{width:60px;height:60px}.SignaturePanel .empty-panel-container .empty-message{text-align:center;max-width:131px;font-size:13px}@media(min-width:641px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .SignaturePanel .empty-panel-container .empty-message{line-height:15px}}@container (min-width: 641px){.App.is-web-component:not(.is-in-desktop-only-mode) .SignaturePanel .empty-panel-container .empty-message{line-height:15px}}.SignaturePanel{margin:0 8px 8px;display:flex;flex-direction:column}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .SignaturePanel{width:auto;margin:16px;flex-grow:1;overflow-y:auto}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .SignaturePanel{width:auto;margin:16px;flex-grow:1;overflow-y:auto}}.SignaturePanel .center{display:flex;justify-content:center;align-items:center}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .SignaturePanel .signature-widget-info .title .arrow{min-width:auto;padding:3px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .SignaturePanel .signature-widget-info .title .arrow{min-width:auto;padding:3px}}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","import actions from 'actions';\n\nconst DEFAULT_REVOCATION_PROXY_PREFIX = 'https://proxy.pdftron.com';\n\n/**\n * Side-effect function that sets the verification status of the document.\n * One of three possible results can happen:\n *\n * 1. Valid: All signatures have been successfully verified\n * 2. Unknown: One or more signatures has issues, but the verification API\n * cannot definitively state the signatures are valid or invalid (i.e. a\n * required Public Key Certificate is missing)\n * 3. Invalid: The document has been digitally signed, but has one or more\n * invalid signatures (i.e. because the document was modified after it was\n * signed, and one or more signature field did not allow for this to occur)\n *\n * The above results are dictated by the return values of:\n *\n * PDFNet.VerificationResult.getDocumentStatus:\n * https://docs.apryse.com/api/web/Core.PDFNet.VerificationResult.html#getDocumentStatus__anchor\n *\n * PDFNet.VerificationResult.getTrustStatus:\n * https://docs.apryse.com/api/web/Core.PDFNet.VerificationResult.html#getTrustStatus__anchor\n *\n * PDFNet.VerificationResult.getDigestStatus:\n * https://docs.apryse.com/api/web/Core.PDFNet.VerificationResult.html#getDigestStatus__anchor\n *\n * PDFNet.VerificationResult.getPermissionsStatus:\n * https://docs.apryse.com/api/web/Core.PDFNet.VerificationResult.html#getPermissionsStatus__anchor\n *\n * Valid:\n * DocumentStatus.e_no_error && TrustStatus.e_trust_verified\n *\n * Unknown:\n * DocumentStatus.e_no_error\n * && (\n *  DigestStatus.e_digest_verified\n *  || DigestStatus.e_digest_verification_disabled\n * ) && trustStatus !== TrustStatus.e_no_trust_status\n * && (\n *   ModificationPermissionsStatus.e_unmodified\n *   || ModificationPermissionsStatus.e_has_allowed_changes\n *   || ModificationPermissionsStatus.e_permissions_verification_disabled\n * )\n *\n * Any other combinations will cause the signature field to be considered\n * Invalid.\n * @ignore\n */\nexport default async (doc, certificates, trustLists, currentLanguage, revocationChecking, revocationProxyPrefix, dispatch) => {\n  const verificationResult = await getVerificationResult(doc, certificates, trustLists, currentLanguage, revocationChecking, revocationProxyPrefix);\n  dispatch(actions.setVerificationResult(verificationResult));\n  return verificationResult;\n};\n\n/**\n * Iterates through each signature widget in the document, retrieves and returns\n * all pertinent information pertaining to Digital Signature Verification\n *\n * @param {Core.Document} doc The document with signatures to verify\n * with the given certificate\n * @param {Array<File | string>} certificates The certificate files to be used\n * for verification. Can be passed as a File object, or a URL in the form\n * of a string, in which a GET call will be made to retrieve the certificate\n * @param {\n *   Array<Blob | ArrayBuffer | Int8Array | Uint8Array | Uint8ClampedArray>\n * } trustLists The Trust Lists to load for verification.\n * @param {string} currentLanguage Current UI language\n * @param {boolean} revocationChecking Determines if the PDFNet API\n * VerificationOptions.enableOnlineCRLRevocationChecking is invoked to enable\n * Online Certification Revocation List (CRL) Revocation Checking is done\n * within the PDFNet logic\n * @param {string} revocationProxyPrefix The URL of a proxy server that should\n * be used to avoid CORS related issues when contacting Certificate Revocation\n * List (CRL) servers\n * @returns {object} An object mapping the field name of each signature widget\n * to their verification results\n * @ignore\n */\nconst getVerificationResult = async (doc, certificates, trustLists, currentLanguage, revocationChecking, revocationProxyPrefix) => {\n  const { PDFNet } = window.Core;\n  const { VerificationResult } = PDFNet;\n  const {\n    TrustStatus,\n    DigestStatus,\n    ModificationPermissionsStatus,\n    DocumentStatus,\n  } = VerificationResult;\n  const verificationResults = {};\n\n\n  await PDFNet.runWithCleanup(async () => {\n    /**\n     * @todo Remove re-assignment of argument from original code?\n     */\n    doc = await doc.getPDFDoc();\n    const opts = await PDFNet.VerificationOptions.create(\n      PDFNet.VerificationOptions.SecurityLevel.e_compatibility_and_archiving\n    );\n\n    if (revocationChecking) {\n      await opts.enableOnlineCRLRevocationChecking(true);\n    }\n\n    if (revocationProxyPrefix === null) {\n      await opts.setRevocationProxyPrefix(DEFAULT_REVOCATION_PROXY_PREFIX);\n    } else if (revocationProxyPrefix !== undefined) {\n      await opts.setRevocationProxyPrefix(revocationProxyPrefix);\n    }\n\n    for (const certificate of certificates) {\n      if (typeof certificate === 'string') {\n        try {\n          await opts.addTrustedCertificateFromURL(certificate);\n        } catch {\n          console.error(\n            `Error encountered when trying to load certificate from URL: ${certificate}\\n`\n            + 'Certificate will not be used as part of verification process.'\n          );\n          continue;\n        }\n      } else if (\n        certificate instanceof File ||\n        Object.prototype.toString.call(certificate) === '[object File]'\n      ) {\n        const fileReader = new FileReader();\n        const arrayBufferPromise = new Promise((resolve, reject) => {\n          fileReader.addEventListener('load', async (e) => {\n            resolve(new Uint8Array(e.target.result));\n          });\n          fileReader.addEventListener('error', () => {\n            reject('Error reading the local certificate');\n          });\n\n          fileReader.readAsArrayBuffer(certificate);\n        });\n        try {\n          await opts.addTrustedCertificate(await arrayBufferPromise);\n        } catch (error) {\n          console.error(\n            `Error encountered when trying to load certificate: ${error}`\n            + 'Certificate will not be used as part of the verification process.'\n          );\n          continue;\n        }\n      } else if (\n        certificate instanceof ArrayBuffer\n        || certificate instanceof Int8Array\n        || certificate instanceof Uint8Array\n        || certificate instanceof Uint8ClampedArray\n      ) {\n        try {\n          await opts.addTrustedCertificate(certificate);\n        } catch (error) {\n          console.error(\n            `Error encountered when trying to load certificate: ${error}`\n            + 'Certificate will not be used as part of the verification process.'\n          );\n          continue;\n        }\n      }\n    }\n\n    for (const trustList of trustLists) {\n      const trustListDataStructure = trustList.constructor.name;\n      const supportedDataStructures = [\n        'ArrayBuffer',\n        'Int8Array',\n        'Uint8Array',\n        'Uint8ClampedArray',\n      ];\n      let fdfDocBuffer;\n      if (trustListDataStructure === 'Blob') {\n        fdfDocBuffer = await trustList.arrayBuffer();\n      } else if (supportedDataStructures.includes(trustListDataStructure)) {\n        fdfDocBuffer = trustList;\n      } else {\n        console.error(\n          'The provided TrustList is an unsupported data-structure. '\n          + 'Please ensure the TrustList is formatted as one of the following '\n          + `data-structures: ${[...supportedDataStructures, 'Blob'].join('|')}`\n        );\n        continue;\n      }\n      try {\n        const fdf = await PDFNet.FDFDoc.createFromMemoryBuffer(fdfDocBuffer);\n        await opts.loadTrustList(fdf);\n      } catch (error) {\n        console.error(\n          `Error encountered when trying to load certificate: ${error}. `\n          + 'Certificate will not be used as part of the verification process.'\n        );\n        continue;\n      }\n    }\n\n    const fieldIterator = await doc.getFieldIteratorBegin();\n    for (; (await fieldIterator.hasNext()); fieldIterator.next()) {\n      const field = await fieldIterator.current();\n      if (\n        !(await field.isValid())\n        || await field.getType() !== PDFNet.Field.Type.e_signature\n      ) {\n        continue;\n      }\n      const digitalSigField = await PDFNet.DigitalSignatureField.createFromField(field);\n      try {\n        const result = await digitalSigField.verify(opts);\n        const id = await (await digitalSigField.getSDFObj()).getObjNum();\n\n        let signer;\n        let signTime;\n        let documentPermission;\n        let isCertification;\n        let contactInfo;\n        let location;\n        let reason;\n        let validAtTimeOfSigning;\n        let signerName;\n        const issuerField = {};\n        const subjectField = {};\n\n        const signed = await digitalSigField.hasCryptographicSignature();\n        if (signed) {\n          const subFilter = await digitalSigField.getSubFilter();\n          if (subFilter === PDFNet.DigitalSignatureField.SubFilterType.e_adbe_pkcs7_detached) {\n            const signerCert = await digitalSigField.getSignerCertFromCMS();\n            /**\n             * @note \"Issuer\" refers to the Certificate Authority that issued the\n             * certificate\n             * \"Subject\" refers to the organization/person that the Certificate\n             * Auhority issued this certificate to\n             *\n             * It is likely that future UI iterations will leverage Issuer\n             * information, so the code has been commented out for now, but will\n             * be uncommented in future feature implementations\n             */\n            // const retrievedIssuerField = await signerCert.getIssuerField();\n            // const processedIssuerField = await processX501DistinguishedName(retrievedIssuerField) || {};\n            const retrievedSubjectField = await signerCert.getSubjectField();\n            const processedSubjectField = await processX501DistinguishedName(retrievedSubjectField) || {};\n            signer = processedSubjectField['e_commonName'];\n          }\n          // Getter functions cannot be called on Digital Signature fields using\n          // e_ETSI_RFC3161\n          if (subFilter !== PDFNet.DigitalSignatureField.SubFilterType.e_ETSI_RFC3161) {\n            if (!signer) {\n              signer = (\n                await digitalSigField.getSignatureName()\n                || await digitalSigField.getContactInfo()\n              );\n            }\n            signTime = await digitalSigField.getSigningTime();\n\n            if (await signTime.isValid()) {\n              signTime = formatPDFNetDate(signTime, currentLanguage);\n            } else {\n              signTime = null;\n            }\n\n            contactInfo = await digitalSigField.getContactInfo();\n            location = await digitalSigField.getLocation();\n            reason = await digitalSigField.getReason();\n          }\n\n          documentPermission = await digitalSigField.getDocumentPermissions();\n          isCertification = await digitalSigField.isCertification();\n        }\n\n        const verificationStatus = await result.getVerificationStatus();\n        const documentStatus = await result.getDocumentStatus();\n        const digestStatus = await result.getDigestStatus();\n        const trustStatus = await result.getTrustStatus();\n        const permissionStatus = await result.getPermissionsStatus();\n        const digestAlgorithm = await result.getDigestAlgorithm();\n        const disallowedChanges = await Promise.all(\n          (await result.getDisallowedChanges()).map(async (change) => ({\n            objnum: await change.getObjNum(),\n            type: await change.getTypeAsString(),\n          }))\n        );\n        const validSignerIdentity = trustStatus === TrustStatus.e_trust_verified;\n\n        let trustVerificationResultString;\n        let trustVerificationResultBoolean;\n        let timeOfTrustVerificationEnum;\n        let trustVerificationTime;\n        const hasTrustVerificationResult = await result.hasTrustVerificationResult();\n        if (hasTrustVerificationResult) {\n          const trustVerificationResult = await result.getTrustVerificationResult();\n\n          trustVerificationResultBoolean = await trustVerificationResult.wasSuccessful();\n          trustVerificationResultString = await trustVerificationResult.getResultString();\n          timeOfTrustVerificationEnum = await trustVerificationResult.getTimeOfTrustVerificationEnum();\n\n          const epochTrustVerificationTime = await trustVerificationResult.getTimeOfTrustVerification();\n          if (epochTrustVerificationTime) {\n            trustVerificationTime = formatDate(epochTrustVerificationTime, currentLanguage);\n          }\n          const certPath = await trustVerificationResult.getCertPath();\n          if (certPath.length) {\n            const firstX509Cert = certPath[0];\n            const retrievedIssuerField = await firstX509Cert.getIssuerField();\n            const processedIssuerField = await processX501DistinguishedName(retrievedIssuerField);\n            Object.assign(issuerField, processedIssuerField);\n            const retrievedSubjectField = await firstX509Cert.getSubjectField();\n            const processedSubjectField = await processX501DistinguishedName(retrievedSubjectField);\n            Object.assign(subjectField, processedSubjectField);\n            const lastX509Cert = certPath[certPath.length - 1];\n            /**\n             * @todo @colim @rdjericpdftron 2022-05-30\n             * Using the pdftron::PDF::VerificationOptions::LoadTrustList API\n             * in combination with\n             * pdftron::Crypto::X509Certificate::GetNotBeforeEpochTime\n             * or\n             * pdftron::Crypto::X509Certificate::GetNotAfterEpochTime\n             * Results in the following fatal error being thrown:\n             *\n             * calendar_point::to_std_timepoint() does not support years after\n             * 2037 on this system\n             *\n             * @rdjericpdftron Mentions that this should be addressed in a\n             * future release of PDFNet when the Botan library has been patched\n             */\n            try {\n              const notBeforeEpochTime = await lastX509Cert.getNotBeforeEpochTime();\n              const notAfterEpochTime = await lastX509Cert.getNotAfterEpochTime();\n              validAtTimeOfSigning = (\n                notAfterEpochTime >= epochTrustVerificationTime\n                && epochTrustVerificationTime >= notBeforeEpochTime\n              );\n            } catch (dateBugError) {\n              if (dateBugError.includes('calendar_point::to_std_timepoint() does not support years after')) {\n                console.warn(\n                  'The following error is a known issue with Botan, and aims to be addressed in a future release of '\n                  + 'PDFNet. This currently does not impact PDFTron\\'s Digital Signature Verification capabilities.'\n                );\n                console.warn(dateBugError);\n              }\n            }\n          }\n        }\n\n        let badgeIcon;\n        if (verificationStatus) {\n          badgeIcon = 'digital_signature_valid';\n        } else if (\n          documentStatus === DocumentStatus.e_no_error &&\n          (digestStatus === DigestStatus.e_digest_verified ||\n            digestStatus === DigestStatus.e_digest_verification_disabled) &&\n          trustStatus !== TrustStatus.e_no_trust_status &&\n          (permissionStatus === ModificationPermissionsStatus.e_unmodified ||\n            permissionStatus === ModificationPermissionsStatus.e_has_allowed_changes ||\n            permissionStatus === ModificationPermissionsStatus.e_permissions_verification_disabled)\n        ) {\n          badgeIcon = 'digital_signature_warning';\n        } else {\n          badgeIcon = 'digital_signature_error';\n        }\n\n        if (signer) {\n          signerName = signer;\n        } else if (!signer && subjectField.e_commonName) {\n          signerName = subjectField.e_commonName;\n        }\n        const fieldName = await field.getName();\n        verificationResults[fieldName] = {\n          signed,\n          signer,\n          signerName,\n          signTime,\n          verificationStatus,\n          documentStatus,\n          digestStatus,\n          trustStatus,\n          permissionStatus,\n          disallowedChanges,\n          trustVerificationResultBoolean,\n          trustVerificationResultString,\n          timeOfTrustVerificationEnum,\n          trustVerificationTime,\n          id,\n          badgeIcon,\n          validSignerIdentity,\n          digestAlgorithm,\n          documentPermission,\n          isCertification,\n          contactInfo,\n          location,\n          reason,\n          issuerField,\n          subjectField,\n          validAtTimeOfSigning,\n        };\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  });\n\n  return verificationResults;\n};\n\n/**\n * Retrieves the relevant information from the given object, containing date\n * information that originates from epoch time, and returns a string containing\n * the date and time information in a human readable string\n *\n * @param {object} date The date object that is returned from PDFNet\n * @returns {string} Human readable formatted date and time\n * @ignore\n */\nconst formatPDFNetDate = (date, currentLanguage) => {\n  const { year, month, day, hour, minute, second } = date;\n  const d = new Date(Date.UTC(year, month - 1, day, hour, minute, second));\n\n  return d.toLocaleDateString(currentLanguage.replace('_', '-'), {\n    year: 'numeric',\n    month: 'long',\n    weekday: 'long',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    timeZoneName: 'short',\n  });\n};\n\n/**\n * Converts an epoch time input to date in string\n *\n * @param {number} epochTime The epoch time to be converted\n * @returns {string} The converted epoch time\n * @ignore\n */\nconst formatDate = (epochTime, currentLanguage) => {\n  const date = new Date(0);\n  // Values greater than 59 are converted into their parent values\n  // (i.e. seconds -> minutes -> hours -> day etc.)\n  date.setUTCSeconds(epochTime);\n\n  return date.toLocaleDateString(currentLanguage.replace('_', '-'), {\n    year: 'numeric',\n    month: 'long',\n    weekday: 'long',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    timeZoneName: 'short',\n  });\n};\n\n/**\n * Processes an instance of the PDFNet.X501DistinguishedName class into a\n * Javascript object that is human readable\n *\n * Intended to process the objects returned from invoking\n * PDFNet.X509Certificate.GetIssuerField and\n * PDFNet.X509Certificate.GetSubjectField\n *\n * @param {PDFNet.X501DistinguishedName} x501DistinguishedNameObject An instance\n * of the PDFNet.X501DistinguishedName class, to be processed into a Javascript\n * object\n * @returns {object} Maps human readable keys (as opposed to the Botan Crpyto\n * OIDs, represented as Array<int> in PDFTron Core) to the corresponding values\n * they map to\n * @ignore\n */\nconst processX501DistinguishedName = async (x501DistinguishedNameObject) => {\n  const processedObject = {};\n  const allAttributeAndValues = await x501DistinguishedNameObject.getAllAttributesAndValues();\n  for (const x501AttributeTypeAndValue of allAttributeAndValues) {\n    const objectIdentifier = await x501AttributeTypeAndValue.getAttributeTypeOID();\n    const key = await objectIdentifier.getRawValue();\n    const value = await x501AttributeTypeAndValue.getStringValue();\n    processedObject[translateObjectIdentifierBotanOID(key)] = value;\n  }\n  return processedObject;\n};\n\n/**\n * Takes an Array<Number> argument (or its string representation from\n * JSON.stringify) and returns the enum it is supposed to represent based on\n * its OID representation in the Botan crypto C++ library\n *\n * PDFTron Core represents the key from the original Map<string, string>\n * data-structre in the form of an array\n *\n * @example The key of the object\n * { \"2.5.4.3\", \"X520.CommonName\" }\n * Is represented as [2,5,4,3] in PDFTron Core\n *\n * Source: https://botan.randombit.net/doxygen/oid__maps_8cpp_source.html\n *\n * @param {string | Array<Number>} objectIdentifierOIDenum The array returned\n * from the invocation of PDFNet.ObjectIdentifier.getRawValue, which can be\n * accepted as the Array input (which the body of the function will convert to a\n * string), or a string representation of the array\n * @returns {string} The human readable enum that the array represents\n * @ignore\n */\nconst translateObjectIdentifierBotanOID = (objectIdentifierOIDenum) => {\n  const botanArrayToEnum = {\n    '[2,5,4,3]': 'e_commonName',\n    '[2,5,4,4]': 'e_surname',\n    '[2,5,4,6]': 'e_countryName',\n    '[2,5,4,7]': 'e_localityName',\n    '[2,5,4,8]': 'e_stateOrProvinceName',\n    '[2,5,4,9]': 'e_streetAddress',\n    '[2,5,4,10]': 'e_organizationName',\n    '[2,5,4,11]': 'e_organizationalUnitName',\n    /**\n     * @note Added by @CorreyL, enum is not in PDFTronCore codebase as of\n     * PDFNetJS8.1\n     *\n     * Listed as { \"1.2.840.113549.1.9.1\", \"PKCS9.EmailAddress\" }\n     * in load_oid2str_map()\n     */\n    '[1,2,840,113549,1,9,1]': 'e_emailAddress',\n  };\n  const arrayAsString = (typeof objectIdentifierOIDenum === 'string')\n    ? objectIdentifierOIDenum\n    : JSON.stringify(objectIdentifierOIDenum);\n  return botanArrayToEnum[arrayAsString];\n};\n","import React, {\n  useEffect,\n  useState,\n} from 'react';\nimport ReactDOM from 'react-dom';\n\nimport core from 'core';\nimport getRootNode from 'helpers/getRootNode';\n\nconst WidgetLocator = ({ rect }) => {\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    const scrollViewContainer = core.getScrollViewElement();\n    const handleScroll = () => {\n      setShow(false);\n    };\n\n    scrollViewContainer.addEventListener('scroll', handleScroll);\n    return () => scrollViewContainer.removeEventListener('scroll', handleScroll);\n  });\n\n  useEffect(() => {\n    if (rect) {\n      setTimeout(() => {\n        // so that the locator won't disappear because of the scroll\n        setShow(true);\n      }, 50);\n\n      setTimeout(() => {\n        setShow(false);\n      }, 700);\n    }\n  }, [rect]);\n\n  return (\n    show &&\n    ReactDOM.createPortal(\n      <div\n        style={{\n          position: 'absolute',\n          top: rect.y1,\n          left: rect.x1,\n          width: rect.x2 - rect.x1,\n          height: rect.y2 - rect.y1,\n          // eslint-disable-next-line custom/no-hex-colors\n          border: '1px solid #00a5e4',\n          // don't appear above the signature properties modal\n          zIndex: 99,\n        }}\n      />,\n      getRootNode().querySelector('#app')\n    )\n  );\n};\n\nexport default WidgetLocator;\n","import WidgetLocator from './WidgetLocator';\n\nexport default WidgetLocator;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\nimport actions from 'actions';\nimport classNames from 'classnames';\nimport core from 'core';\nimport selectors from 'selectors';\n\nimport WidgetLocator from '../WidgetLocator';\nimport useFocusHandler from 'hooks/useFocusHandler';\nimport PanelListItem from 'src/components/PanelListItem';\nimport Button from 'src/components/Button';\n\nimport './WidgetInfo.scss';\n\nexport const renderPermissionStatus = ({\n  isCertification,\n  ModificationPermissionsStatus,\n  permissionStatus,\n  translate,\n  digestStatus,\n  DigestStatusErrorCodes\n}) => {\n\n  if (digestStatus === DigestStatusErrorCodes.e_digest_invalid) {\n    return <p>{translate('digitalSignatureVerification.digestStatus.documentHasBeenAltered')}</p>;\n  }\n\n  const permissionMessages = {\n    [ModificationPermissionsStatus.e_invalidated_by_disallowed_changes]: 'digitalSignatureVerification.permissionStatus.invalidatedByDisallowedChanges',\n    [ModificationPermissionsStatus.e_has_allowed_changes]: 'digitalSignatureVerification.permissionStatus.hasAllowedChanges',\n    [ModificationPermissionsStatus.e_unmodified]: isCertification\n      ? `${translate('digitalSignatureVerification.permissionStatus.unmodified')} ${translate('digitalSignatureVerification.certified')}.`\n      : `${translate('digitalSignatureVerification.permissionStatus.unmodified')} ${translate('digitalSignatureVerification.signed')}.`,\n    [ModificationPermissionsStatus.e_permissions_verification_disabled]: 'digitalSignatureVerification.permissionStatus.permissionsVerificationDisabled',\n    [ModificationPermissionsStatus.e_no_permissions_status]: 'digitalSignatureVerification.permissionStatus.noPermissionsStatus',\n    [ModificationPermissionsStatus.e_unsupported_permissions_features]: 'digitalSignatureVerification.permissionStatus.unsupportedPermissionsFeatures'\n  };\n\n  return <p>{translate(permissionMessages[permissionStatus] || '')}</p>;\n};\n\nconst propTypes = {\n  name: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n  field: PropTypes.instanceOf(window.Core.Annotations.Forms.Field),\n};\n\nconst WidgetInfo = ({ name, field }) => {\n  const verificationResult = useSelector((state) => selectors.getVerificationResult(state, name));\n  const [locatorRect, setLocatorRect] = useState(null);\n  const [signatureDetailsExpanded, setSignatureDetailsExpanded] = useState(false);\n  const { VerificationResult, VerificationOptions } = window.Core.PDFNet;\n  const { TimeMode } = VerificationOptions;\n  const { ModificationPermissionsStatus, DigestStatus: DigestStatusErrorCodes } = VerificationResult;\n  const [translate] = useTranslation();\n\n  const {\n    signed,\n    signTime,\n    verificationStatus,\n    permissionStatus,\n    disallowedChanges,\n    trustVerificationResultBoolean,\n    timeOfTrustVerificationEnum,\n    trustVerificationTime,\n    badgeIcon,\n    isCertification,\n    contactInfo,\n    location,\n    reason,\n    signerName,\n    digestStatus,\n  } = verificationResult;\n\n  const dispatch = useDispatch();\n\n  /**\n   * Side-effect function that highlights the SignatureWidgetAnnotation\n   * pertaining to the text element that was clicked by using core code to find\n   * the coordinates of the widget on the page it is placed on\n   *\n   * @param {Annotations.Forms.Field} field The field pertaining\n   * to the text element clicked in the Signature Panel\n   */\n  const jumpToWidget = (field) => {\n    if (!field.widgets.length) {\n      return;\n    }\n    const widget = field.widgets[0];\n    core.jumpToAnnotation(widget);\n\n    const { scrollLeft, scrollTop } = core.getScrollViewElement();\n    const rect = widget.getRect();\n    const windowTopLeft = core\n      .getDisplayModeObject()\n      .pageToWindow({ x: rect.x1, y: rect.y1 }, widget.PageNumber);\n    const windowBottomRight = core\n      .getDisplayModeObject()\n      .pageToWindow({ x: rect.x2, y: rect.y2 }, widget.PageNumber);\n\n    setLocatorRect({\n      x1: windowTopLeft.x - scrollLeft,\n      y1: windowTopLeft.y - scrollTop,\n      x2: windowBottomRight.x - scrollLeft,\n      y2: windowBottomRight.y - scrollTop,\n    });\n  };\n\n  /**\n   * Function that invokes the necessary methods when a user interacts with\n   * the title of the widget\n   *\n   * interaction\n   */\n  const titleInteraction = () => {\n    jumpToWidget(field);\n  };\n\n  const renderVerificationStatus = () => {\n    const verificationType = isCertification\n      ? translate('digitalSignatureVerification.Certification')\n      : translate('digitalSignatureVerification.Signature');\n    return (\n      <div className=\"title\">\n        <p>\n          {\n            verificationStatus\n              ? translate('digitalSignatureVerification.verificationStatus.valid', { verificationType })\n              : translate('digitalSignatureVerification.verificationStatus.failed', { verificationType })\n          }\n        </p>\n      </div>\n    );\n  };\n\n  const renderDisallowedChanges = () => {\n    return disallowedChanges.map(({ objnum, type }) => (\n      <li key={objnum}>\n        <p>\n          {\n            translate(\n              'digitalSignatureVerification.disallowedChange',\n              { type, objnum }\n            )\n          }\n        </p>\n      </li>\n    ));\n  };\n\n  const renderTrustVerification = () => {\n    let verificationTimeMessage;\n    switch (timeOfTrustVerificationEnum) {\n      case (TimeMode.e_current):\n        verificationTimeMessage = (\n          translate('digitalSignatureVerification.trustVerification.current')\n        );\n        break;\n      case (TimeMode.e_signing):\n        verificationTimeMessage = (\n          translate('digitalSignatureVerification.trustVerification.signing')\n        );\n        break;\n      case (TimeMode.e_timestamp):\n        verificationTimeMessage = (\n          translate('digitalSignatureVerification.trustVerification.timestamp')\n        );\n        break;\n      default:\n        console.warn(\n          `Unexpected pdftron::PDF::VerificationOptions::TimeMode: ${timeOfTrustVerificationEnum}`\n        );\n    }\n    return (\n      <>\n        <li>\n          <p>\n            {\n              translate(\n                trustVerificationResultBoolean\n                  ? 'digitalSignatureVerification.trustVerification.verifiedTrust'\n                  : 'digitalSignatureVerification.trustVerification.noTrustVerification'\n              )\n            }\n          </p>\n        </li>\n        {\n          /**\n           * @todo Chat with @rastko when he is available to determine what\n           * content from `trustVerificationResultString` could potentially\n           * be important to show to users\n           *\n           * <div>\n           *   <p className='bold'>Trust verification result:</p>\n           *   {\n           *     trustVerificationResultString.split('\\n').map((line, idx) => {\n           *       return (\n           *         <p\n           *           key={`trustVerificationResultString-${idx}`}\n           *           className={line[0] === '\\t' ? '' : 'bold'}\n           *         >\n           *           {line}\n           *         </p>\n           *       );\n           *     })\n           *   }\n           * </div>\n           */\n        }\n        <li>\n          <p>\n            {trustVerificationTime}\n          </p>\n        </li>\n        <li>\n          <p>\n            {verificationTimeMessage}\n          </p>\n        </li>\n      </>\n    );\n  };\n\n  const renderSignatureDetails = () => {\n    // No additional signature details to render\n    if (!contactInfo && !location && !reason) {\n      return null;\n    }\n    return (\n      <div\n        className='signatureDetails'\n        tabIndex={-1}\n      >\n        <div className=\"title collapsible\">\n          <Button\n            img=\"icon-chevron-right\"\n            className={classNames({\n              arrow: true,\n              expanded: signatureDetailsExpanded,\n            })}\n            ariaExpanded={signatureDetailsExpanded}\n            isActive={signatureDetailsExpanded}\n            ariaLabel={translate('digitalSignatureVerification.signatureDetails.signatureDetails')}\n            onClick={\n              () => setSignatureDetailsExpanded(!signatureDetailsExpanded)\n            }\n          />\n          <p>\n            {\n              translate(\n                'digitalSignatureVerification.signatureDetails.signatureDetails'\n              )\n            }\n          </p>\n        </div>\n        {\n          signatureDetailsExpanded\n          && (\n            <ul className=\"body\">\n              <li>\n                <p className=\"bold\">\n                  {\n                    `${translate('digitalSignatureVerification.signatureDetails.contactInformation')}:`\n                  }\n                </p>\n                <p className=\"result-for-header\">\n                  {\n                    contactInfo\n                    || translate('digitalSignatureVerification.signatureDetails.noContactInformation')\n                  }\n                </p>\n              </li>\n              <li>\n                <p className=\"bold\">\n                  {\n                    `${translate('digitalSignatureVerification.signatureDetails.location')}:`\n                  }\n                </p>\n                <p className=\"result-for-header\">\n                  {\n                    location\n                    || translate('digitalSignatureVerification.signatureDetails.noLocation')\n                  }\n                </p>\n              </li>\n              <li>\n                <p className=\"bold\">\n                  {\n                    `${translate('digitalSignatureVerification.signatureDetails.reason')}:`\n                  }\n                </p>\n                <p className=\"result-for-header\">\n                  {\n                    reason\n                    || translate('digitalSignatureVerification.signatureDetails.noReason')\n                  }\n                </p>\n              </li>\n              {\n                signTime && (\n                  <li>\n                    <p className=\"bold\">\n                      {\n                        `${translate('digitalSignatureVerification.signatureDetails.signingTime')}:`\n                      }\n                    </p>\n                    <p className=\"result-for-header\">\n                      {\n                        signTime\n                        || translate('digitalSignatureVerification.signatureDetails.noSigningTime')\n                      }\n                    </p>\n                  </li>\n                )\n              }\n            </ul>\n          )\n        }\n      </div>\n    );\n  };\n\n  const openSignatureModal = () => {\n    dispatch(actions.setSignatureValidationModalWidgetName(name));\n    dispatch(actions.openElement('signatureValidationModal'));\n  };\n\n  const openSignatureModalWithFocus = useFocusHandler(openSignatureModal);\n\n  /**\n   * Renders a button to open the signature modal\n   */\n  const renderSignaturePropertiesButton = () => {\n    return (\n      <li>\n        <button\n          data-element={`signatureProperties-${name}`}\n          onClick={openSignatureModalWithFocus}\n          tabIndex={0}\n          className=\"signatureProperties link\"\n          aria-label='Open signature properties modal'\n        >\n          <p className=\"bold underline\">\n            {translate('digitalSignatureVerification.signatureProperties')}\n          </p>\n        </button>\n      </li>\n    );\n  };\n\n  const getRenderTitle = () => {\n    let content = isCertification\n      ? translate('digitalSignatureVerification.Certified')\n      : translate('digitalSignatureVerification.Signed');\n    content += ` ${translate('digitalSignatureVerification.by')} ${signerName || translate('digitalSignatureModal.unknown')}`;\n    if (signTime) {\n      content += ` ${translate('digitalSignatureVerification.on')} ${signTime}`;\n    }\n    return content;\n  };\n\n  return (\n    <div className=\"signature-widget-info\">\n      {signed ? (\n        <React.Fragment>\n          <PanelListItem\n            labelHeader={getRenderTitle()}\n            iconGlyph={badgeIcon}\n            useI18String={false}\n            onClick={titleInteraction}\n            onKeyDown={titleInteraction}\n          >\n            <div\n              className='verificationDetails'\n              tabIndex={-1}\n            >\n              <div className=\"header\">\n                {\n                  renderVerificationStatus({\n                    isCertification,\n                    verificationStatus,\n                  })\n                }\n                <ul className=\"body\">\n                  <li>\n                    {\n                      renderPermissionStatus({\n                        isCertification,\n                        ModificationPermissionsStatus,\n                        permissionStatus,\n                        translate,\n                        digestStatus,\n                        DigestStatusErrorCodes,\n                      })\n                    }\n                  </li>\n                  {renderDisallowedChanges()}\n                  {renderTrustVerification()}\n                  {renderSignaturePropertiesButton()}\n                </ul>\n              </div>\n            </div>\n            <div className=\"header header-with-arrow\">\n              {renderSignatureDetails()}\n            </div>\n          </PanelListItem>\n        </React.Fragment>\n      ) : (\n        <PanelListItem\n          labelHeader={translate('digitalSignatureVerification.unsignedSignatureField', { fieldName: field.name })}\n          iconGlyph='digital_signature_empty'\n          useI18String={false}\n          onClick={titleInteraction}\n          onKeyDown={titleInteraction}\n        />\n      )}\n      <WidgetLocator rect={locatorRect} />\n    </div>\n  );\n};\n\nWidgetInfo.propTypes = propTypes;\n\nexport default WidgetInfo;\n","import WidgetInfo, { renderPermissionStatus } from './WidgetInfo';\n\nexport default WidgetInfo;\nexport {\n  renderPermissionStatus\n};\n","import React, { useCallback, useEffect, useState, } from 'react';\nimport { useDispatch, useSelector, } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\n\nimport actions from 'actions';\nimport core from 'core';\nimport selectors from 'selectors';\nimport setVerificationResult from 'helpers/setVerificationResult';\n\nimport Spinner from 'components/Spinner';\nimport WidgetInfo from './WidgetInfo';\n\nimport './SignaturePanel.scss';\nimport Icon from 'components/Icon';\nimport { panelData, panelNames } from 'constants/panel';\n\nconst SignaturePanel = () => {\n  const dispatch = useDispatch();\n  const [fields, setFields] = useState([]);\n  const [showSpinner, setShowSpinner] = useState(false);\n  const [certificateErrorMessage, setCertificateErrorMessage] = useState('');\n  const [document, setDocument] = useState(core.getDocument());\n  const [\n    isDisabled,\n    certificate,\n    trustLists,\n    currentLanguage,\n    revocationChecking,\n    revocationProxyPrefix,\n  ] = useSelector((state) => [\n    selectors.isElementDisabled(state, 'signaturePanel'),\n    selectors.getCertificates(state),\n    selectors.getTrustLists(state),\n    selectors.getCurrentLanguage(state),\n    selectors.getIsRevocationCheckingEnabled(state),\n    selectors.getRevocationProxyPrefix(state),\n  ]);\n  const [translate] = useTranslation();\n\n  const onDocumentLoaded = async () => {\n    setDocument(core.getDocument());\n  };\n\n  const onDocumentUnloaded = useCallback(() => {\n    setShowSpinner(true);\n    dispatch(actions.setVerificationResult({}));\n  }, [setShowSpinner, dispatch]);\n\n  const onAnnotationChanged = ((annotations, action) => {\n    const isInFormCreationMode = core.getAnnotationManager().getFormFieldCreationManager().isInFormFieldCreationMode();\n\n    if (action === 'add') {\n      addSignatureWidgetAnnotations(core.getAnnotationManager().getAnnotationsList());\n    } else if (action === 'delete' && isInFormCreationMode) {\n      removeAnnotations(annotations);\n    }\n  });\n\n  const addNonSignedFields = () => {\n    const currentAnnotations = core.getAnnotationManager().getAnnotationsList();\n    addSignatureWidgetAnnotations(currentAnnotations);\n  };\n\n  const addSignatureWidgetAnnotations = (annotations) => {\n    const currentFields = [];\n    annotations.forEach((annotation) => {\n      if (annotation instanceof window.Core.Annotations.SignatureWidgetAnnotation) {\n        currentFields.push(annotation.getField());\n      }\n    });\n    const newSet = new Set(currentFields);\n    setFields([...newSet]);\n  };\n\n  const removeAnnotations = (annotations) => {\n    annotations.forEach((annotation) => {\n      removeMatchingWidget(annotation);\n    });\n\n    addNonSignedFields();\n  };\n\n  const removeMatchingWidget = (annotation) => {\n    const isWidget = annotation instanceof window.Core.Annotations.WidgetAnnotation;\n    if (isWidget) {\n      const annotationManager = core.getAnnotationManager();\n      const annotationList = annotationManager.getAnnotationsList();\n      const widgetToDelete = annotationList.filter((annotationToFilter) => {\n        return annotationToFilter.getCustomData('trn-editing-rectangle-id') === annotation.Id;\n      });\n      annotationManager.deleteAnnotations(widgetToDelete);\n    }\n  };\n\n  const resetFields = () => {\n    setFields([]);\n    addNonSignedFields();\n  };\n\n  useEffect(() => {\n    // This ensures that when the document loads, the state of this component is\n    // updated accordingly\n    core.addEventListener('documentLoaded', onDocumentLoaded);\n    core.addEventListener('documentUnloaded', onDocumentUnloaded);\n    core.addEventListener('annotationChanged', onAnnotationChanged);\n    core.addEventListener('formFieldCreationModeStarted', resetFields);\n    core.addEventListener('formFieldCreationModeEnded', resetFields);\n    return () => {\n      core.removeEventListener('documentLoaded', onDocumentLoaded);\n      core.removeEventListener('documentUnloaded', onDocumentUnloaded);\n      core.removeEventListener('annotationChanged', onAnnotationChanged);\n      core.removeEventListener('formFieldCreationModeStarted', resetFields);\n      core.removeEventListener('formFieldCreationModeEnded', resetFields);\n    };\n  }, [onDocumentUnloaded]);\n\n  useEffect(() => {\n    // Need certificates for PDFNet to verify against, and for the document\n    // to be loaded in order to iterate through the signature fields in the\n    // document\n    if (document) {\n      // We need to wait for the annotationsLoaded event, otherwise the\n      // Field will not exist in the document\n      core.getAnnotationsLoadedPromise().then(() => {\n        setShowSpinner(true);\n        setVerificationResult(document, certificate, trustLists, currentLanguage, revocationChecking, revocationProxyPrefix, dispatch)\n          .then(async (verificationResult) => {\n            const fieldManager = core.getAnnotationManager().getFieldManager();\n            setFields(Object.keys(verificationResult).map((fieldName) => fieldManager.getField(fieldName)));\n            setCertificateErrorMessage('');\n          })\n          .catch((e) => {\n            if (e && e.message) {\n              setCertificateErrorMessage(e.message);\n            } else {\n              console.error(e);\n            }\n          })\n          .then(() => {\n            addNonSignedFields();\n          })\n          .finally(() => {\n            setShowSpinner(false);\n          });\n      });\n    } else {\n      setShowSpinner(true);\n    }\n  }, [certificate, document, dispatch, currentLanguage]);\n\n  if (isDisabled) {\n    return null;\n  }\n\n  /**\n   * Returns a JSX element if document loading is not complete, or an error\n   * occurs, otherwise nothing is returned, indicating that information about\n   * one or more signature will be returned from this component\n   */\n  const renderLoadingOrErrors = () => {\n    let result;\n    if (showSpinner) {\n      result = <Spinner inPanel width={'40px'} height={'40px'}/>;\n    } else if (certificateErrorMessage === 'Error reading the local certificate') {\n      result = translate('digitalSignatureVerification.panelMessages.localCertificateError');\n    } else if (certificateErrorMessage === 'Download Failed') {\n      result = translate('digitalSignatureVerification.panelMessages.certificateDownloadError');\n    } else if (!fields.length) {\n      result = translate('digitalSignatureVerification.panelMessages.noSignatureFields');\n    } else {\n      /**\n       * If document has completed loading, there are no errors, and there are\n       * signature fields, this function does not need to return anything\n       */\n      return null;\n    }\n\n    return (\n      <div className=\"empty-panel-container\">\n        <Icon className=\"empty-icon\" glyph={panelData[panelNames.SIGNATURE].icon}/>\n        <div className=\"empty-message\">{result}</div>\n      </div>\n    );\n  };\n\n  return (\n    <div\n      className=\"Panel SignaturePanel\"\n      data-element=\"signaturePanel\"\n    >\n      {renderLoadingOrErrors()}\n      {\n        !showSpinner && fields.length > 0 && (\n          fields.map((field, index) => {\n            return (\n              <WidgetInfo\n                key={index}\n                name={field.name}\n                collapsible\n                field={field}\n              />\n            );\n          })\n        )\n      }\n    </div>\n  );\n};\n\nexport default SignaturePanel;\n","import SignaturePanel from './SignaturePanel';\nimport { renderPermissionStatus } from './WidgetInfo';\n\nexport default SignaturePanel;\n\nexport {\n  renderPermissionStatus,\n  SignaturePanel,\n};\n","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../../node_modules/sass-loader/dist/cjs.js!./SignatureIcon.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach((el) => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach((el) => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function() {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".signature-icon .badge{color:#fff}.signature-icon .medium{width:18px;height:18px}.signature-icon .small{width:16px;height:16px}\", \"\"]);\n\n// exports\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./SignatureValidationModal.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach((el) => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach((el) => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function() {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".open.SignatureValidationModal{visibility:visible}.closed.SignatureValidationModal{visibility:hidden}:host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.SignatureValidationModal .footer .modal-button.confirm:hover{background:var(--primary-button-hover);border-color:var(--primary-button-hover);color:var(--gray-0)}.SignatureValidationModal .footer .modal-button.confirm{background:var(--primary-button);border-color:var(--primary-button);color:var(--primary-button-text)}.SignatureValidationModal .footer .modal-button.confirm.disabled{cursor:default;background:var(--disabled-button-color);color:var(--primary-button-text)}.SignatureValidationModal .footer .modal-button.confirm.disabled span{color:var(--primary-button-text)}.SignatureValidationModal .footer .modal-button.cancel:hover,.SignatureValidationModal .footer .modal-button.secondary-btn-custom:hover{border:none;box-shadow:inset 0 0 0 1px var(--blue-6);color:var(--blue-6)}.SignatureValidationModal .footer .modal-button.cancel,.SignatureValidationModal .footer .modal-button.secondary-btn-custom{border:none;box-shadow:inset 0 0 0 1px var(--primary-button);color:var(--primary-button)}.SignatureValidationModal .footer .modal-button.cancel.disabled,.SignatureValidationModal .footer .modal-button.secondary-btn-custom.disabled{cursor:default;border:none;box-shadow:inset 0 0 0 1px rgba(43,115,171,.5);color:rgba(43,115,171,.5)}.SignatureValidationModal .footer .modal-button.cancel.disabled span,.SignatureValidationModal .footer .modal-button.secondary-btn-custom.disabled span{color:rgba(43,115,171,.5)}.SignatureValidationModal{position:fixed;inset-inline-start:0;inset-block-end:0;z-index:100;width:100%;height:100%;display:flex;justify-content:center;align-items:center;background:var(--modal-negative-space)}.SignatureValidationModal .modal-container .wrapper .modal-content{padding:10px}.SignatureValidationModal .footer{display:flex;flex-direction:row;justify-content:flex-end;width:100%;margin-top:13px}.SignatureValidationModal .footer.modal-footer{padding:16px;margin:0;border-top:1px solid var(--divider)}.SignatureValidationModal .footer .modal-button{display:flex;justify-content:center;align-items:center;padding:6px 18px;margin:8px 0 0;width:auto;width:-moz-fit-content;width:fit-content;border-radius:4px;height:30px;cursor:pointer}.SignatureValidationModal .footer .modal-button.confirm{margin-inline-start:4px}.SignatureValidationModal .footer .modal-button.secondary-btn-custom{border-radius:4px;padding:2px 20px 4px;cursor:pointer}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .SignatureValidationModal .footer .modal-button{padding:23px 8px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .SignatureValidationModal .footer .modal-button{padding:23px 8px}}.SignatureValidationModal .swipe-indicator{background:var(--swipe-indicator-bg);border-radius:2px;height:4px;width:38px;position:absolute;inset-block-start:12px;margin-inline-start:auto;margin-inline-end:auto;inset-inline-start:0;inset-inline-end:0}@media(min-width:641px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .SignatureValidationModal .swipe-indicator{display:none}}@container (min-width: 641px){.App.is-web-component:not(.is-in-desktop-only-mode) .SignatureValidationModal .swipe-indicator{display:none}}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .SignatureValidationModal .swipe-indicator{width:32px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .SignatureValidationModal .swipe-indicator{width:32px}}.SignatureValidationModal .container{display:flex;flex-direction:column;justify-content:space-around;border-radius:4px;min-width:350px;padding:20px;max-width:630px}.SignatureValidationModal .validation-header{position:relative;display:flex;justify-content:left;align-items:center;padding-bottom:20px;font-size:16px}.SignatureValidationModal .validation-header [data-element=signatureValidationModalCloseButton]{position:absolute;inset-inline-end:0}.SignatureValidationModal .validation-header [data-element=signatureValidationModalCloseButton]:hover{background:none}.SignatureValidationModal .summary-box{position:relative;display:flex;border:1px solid;border-color:var(--gray-4);border-radius:5px;padding:16px;font-weight:700}.SignatureValidationModal .summary-box>:not(:first-child){margin-inline-start:8px}.SignatureValidationModal .validation-header-valid{background-color:#8dd88d}.SignatureValidationModal .validation-header-warning{background-color:#e2b719}.SignatureValidationModal .validation-header-error{background-color:#ff7979}.SignatureValidationModal .validation-header-unknown{background-color:#ddd}.SignatureValidationModal .body{margin-top:16px}.SignatureValidationModal div.body>div.section:first-child{margin-top:0}.SignatureValidationModal div.body>div.section{margin:16px;padding-bottom:16px;border-bottom:1px solid var(--gray-5)}.SignatureValidationModal div.body>div.section:last-child{margin-bottom:0}.SignatureValidationModal div.body>div.section>p{font-size:13px;margin:8px 0}.SignatureValidationModal div.body>div.section>p:last-child{margin:0}.SignatureValidationModal .header{font-weight:700}.SignatureValidationModal .modal-footer{display:flex;justify-content:flex-end;margin-top:32px}.SignatureValidationModal .modal-footer .close-modal-button{background:var(--primary-button);border:1px;border-color:var(--primary-button);border-radius:4px;padding:0 16px;height:32px;width:-moz-fit-content;width:fit-content;display:flex;align-items:center;justify-content:center;position:relative;color:var(--primary-button-text);cursor:pointer}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .SignatureValidationModal .modal-footer .close-modal-button{height:40px;width:128px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .SignatureValidationModal .modal-footer .close-modal-button{height:40px;width:128px}}.SignatureValidationModal .modal-footer .close-modal-button:hover{background:var(--primary-button-hover)}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Icon from 'components/Icon';\n\nimport './SignatureIcon.scss';\n\nconst propTypes = {\n  badge: PropTypes.string,\n  size: PropTypes.string,\n};\n\nconst SignatureIcon = ({ badge, size = 'medium' }) => (\n  <div className=\"signature-icon\">\n    {badge && <Icon glyph={badge} className={`badge ${size}`} />}\n  </div>\n);\n\nSignatureIcon.propTypes = propTypes;\n\nexport default SignatureIcon;\n","import SignatureIcon from './SignatureIcon';\n\nexport default SignatureIcon;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport selectors from 'selectors';\nimport DataElements from 'constants/dataElement';\nimport Button from 'components/Button';\nimport ModalWrapper from 'components/ModalWrapper';\n\nimport {\n  renderPermissionStatus,\n  Spinner,\n} from 'components/SignaturePanel';\nimport SignatureIcon from 'components/SignaturePanel/SignatureIcon';\n\nimport actions from 'actions';\n\nimport './SignatureValidationModal.scss';\nimport useFocusOnClose from 'src/hooks/useFocusOnClose';\n\nconst SignatureValidationModal = () => {\n  const [translate] = useTranslation();\n\n  const [isOpen, verificationResult] = useSelector(\n    (state) => {\n      const { validationModalWidgetName } = state.digitalSignatureValidation;\n      return [\n        selectors.isElementOpen(state, DataElements.SIGNATURE_VALIDATION_MODAL),\n        selectors.getVerificationResult(state, validationModalWidgetName),\n      ];\n    },\n    shallowEqual,\n  );\n\n  const dispatch = useDispatch();\n  const closeModal = useFocusOnClose(() => {\n    dispatch(actions.closeElements([DataElements.SIGNATURE_VALIDATION_MODAL]));\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      dispatch(\n        actions.closeElements([\n          DataElements.SIGNATURE_MODAL,\n          DataElements.LOADING_MODAL,\n          DataElements.PRINT_MODAL,\n          DataElements.ERROR_MODAL,\n          DataElements.PASSWORD_MODAL,\n        ])\n      );\n    }\n  }, [dispatch, isOpen]);\n\n  /**\n   * @todo Figure out if this useEffect is still needed? Component appears to be\n   * operating normally without it.\n   */\n  /*\n  useEffect(() => {\n    const onDigitalSignatureAvailable = widget => {\n      setWidgetName(widget.getField().name);\n      dispatch(actions.openElements(['signatureValidationModal']));\n    };\n\n    core.addEventListener(\n      'digitalSignatureAvailable',\n      onDigitalSignatureAvailable,\n    );\n    return () => core.removeEventListener(\n      'digitalSignatureAvailable',\n      onDigitalSignatureAvailable,\n    );\n  }, [dispatch]);\n  */\n\n  const {\n    badgeIcon,\n    verificationStatus,\n    permissionStatus,\n    isCertification,\n    documentPermission,\n    trustVerificationResultString,\n    timeOfTrustVerificationEnum,\n    trustVerificationTime,\n    digestAlgorithm,\n    digestStatus,\n    documentStatus,\n    trustStatus,\n    signerName,\n  } = verificationResult;\n  const {\n    DigestAlgorithm,\n    DigitalSignatureField,\n    VerificationOptions,\n    VerificationResult,\n  } = window.Core.PDFNet;\n  const {\n    ModificationPermissionsStatus,\n    TrustStatus,\n    DigestStatus,\n    DocumentStatus,\n  } = VerificationResult;\n  const { TimeMode } = VerificationOptions;\n\n  const renderSignatureSummary = () => {\n    let status;\n    switch (badgeIcon) {\n      case 'digital_signature_valid':\n        status = translate('digitalSignatureModal.valid');\n        break;\n      case 'digital_signature_warning':\n        status = translate('digitalSignatureModal.unknown');\n        break;\n      case 'digital_signature_error':\n        status = translate('digitalSignatureModal.invalid');\n        break;\n      default:\n        status = translate('digitalSignatureModal.unknown');\n    }\n\n    const type = isCertification\n      ? translate('digitalSignatureModal.certification')\n      : translate('digitalSignatureModal.signature');\n\n    return (\n      <div>\n        <div className=\"summary-box\">\n          <SignatureIcon badge={badgeIcon} size=\"medium\" />\n          <div>\n            {\n              translate(\n                'digitalSignatureModal.summaryBox.summary',\n                {\n                  type,\n                  status,\n                }\n              )\n            }\n            {\n              badgeIcon === 'digital_signature_valid'\n                ? translate(\n                  'digitalSignatureModal.summaryBox.signedBy',\n                  {\n                    name: signerName || translate('digitalSignatureModal.unknown'),\n                    interpolation: { escapeValue: false }\n                  },\n                ) : ''\n            }\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderHeaderTitle = () => {\n    const typeCapitalized = isCertification\n      ? translate('digitalSignatureModal.Certification')\n      : translate('digitalSignatureModal.Signature');\n\n    return translate('digitalSignatureModal.title', { type: typeCapitalized });\n  };\n\n  /**\n   * Returns a message in a <p> tag corresponding to the enum value of\n   * documentPermission, which originates from the invocation of\n   * PDFNet.DigitalSignatureField.getDocumentPermissions\n   */\n  const renderDocumentPermission = () => {\n    if (!documentPermission) {\n      return;\n    }\n\n    let content = '';\n    const editor = isCertification ? 'certifier' : 'signer';\n\n    switch (documentPermission) {\n      case DigitalSignatureField.DocumentPermissions.e_no_changes_allowed:\n        content += translate('digitalSignatureModal.documentPermission.noChangesAllowed', { editor });\n        break;\n      case DigitalSignatureField.DocumentPermissions.e_formfilling_signing_allowed:\n        content += translate('digitalSignatureModal.documentPermission.formfillingSigningAllowed', { editor });\n        break;\n      case DigitalSignatureField.DocumentPermissions.e_annotating_formfilling_signing_allowed:\n        content += translate('digitalSignatureModal.documentPermission.annotatingFormfillingSigningAllowed', { editor });\n        break;\n      case DigitalSignatureField.DocumentPermissions.e_unrestricted:\n        content += translate('digitalSignatureModal.documentPermission.unrestricted', { editor });\n        break;\n    }\n\n    return <p>{content}</p>;\n  };\n\n  /**\n   * Returns a message in a <p> tag corresponding to the signature's trust\n   * verification result.\n   *\n   * If trustVerificationResultString is a falsy value (i.e. undefined, null or\n   * empty string), originating from the invocation of\n   * PDFNet.TrustVerificationResult.getResultString, then a message indicating\n   * no trust verification result is rendered.\n   *\n   * If a trust verification result is available, then the based on\n   * timeOfTrustVerificationEnum, which originates from the invocation of\n   * PDFNet.TrustVerificationResult.getTimeOfTrustVerificationEnum, an\n   * appropriate message is rendered\n   */\n  const renderTrustVerification = () => {\n    if (!trustVerificationResultString) {\n      return (\n        <p>{translate('digitalSignatureModal.trustVerification.none')}</p>\n      );\n    }\n\n    let content = '';\n    switch (timeOfTrustVerificationEnum) {\n      case (TimeMode.e_current):\n        content += translate(\n          'digitalSignatureModal.trustVerification.current',\n          { trustVerificationTime }\n        );\n        break;\n      case (TimeMode.e_signing):\n        content += translate(\n          'digitalSignatureModal.trustVerification.signing',\n          { trustVerificationTime }\n        );\n        break;\n      case (TimeMode.e_timestamp):\n        content += translate(\n          'digitalSignatureModal.trustVerification.timestamp',\n          { trustVerificationTime }\n        );\n        break;\n    }\n\n    return <p>{content}</p>;\n  };\n\n  /**\n   * Returns a message in a <p> tag corresponding to the signature's digest\n   * algorithm, which originates from the invocation of\n   * PDFNet.verificationResult.getDigestAlgorithm\n   */\n  const renderDigestAlgorithm = () => {\n    let content = translate('digitalSignatureModal.digestAlgorithm.preamble');\n\n    switch (digestAlgorithm) {\n      case DigestAlgorithm.Type.e_SHA1:\n        content += 'SHA1.';\n        break;\n      case DigestAlgorithm.Type.e_SHA256:\n        content += 'SHA256.';\n        break;\n      case DigestAlgorithm.Type.e_SHA384:\n        content += 'SHA384.';\n        break;\n      case DigestAlgorithm.Type.e_SHA512:\n        content += 'SHA512.';\n        break;\n      case DigestAlgorithm.Type.e_RIPEMD160:\n        content += 'RIPEMD160.';\n        break;\n      case DigestAlgorithm.Type.e_unknown_digest_algorithm:\n        content = translate('digitalSignatureModal.digestAlgorithm.unknown');\n        break;\n    }\n\n    return <p>{content}</p>;\n  };\n\n  /**\n   * Returns a message in a <p> tag corresponding to the boolean trust status of\n   * the signature, which originates from evaluating whether or not the value of\n   * PDFNet.verificationResult.getTrustStatus is set to the enum\n   * PDFNet.verificationResult.trustStatus.e_trust_verified\n   *\n   * Intentionally an un-used function, as @rdjericpdftron has noted that it\n   * is superfluous, but the method has been left behind in-case it could be\n   * leveraged in the future\n   */\n  /*\n  const renderSignerIdentityValidity = () => {\n    let content = translate('digitalSignatureModal.signerIdentity.preamble');\n    if (validSignerIdentity) {\n      content += translate('digitalSignatureModal.signerIdentity.valid');\n    } else {\n      content += translate('digitalSignatureModal.signerIdentity.unknown');\n    }\n    return <p>{content}</p>;\n  };\n  */\n\n  const renderDocumentStatus = () => {\n    let content;\n\n    switch (documentStatus) {\n      case DocumentStatus.e_no_error:\n        content = translate(\n          'digitalSignatureVerification.documentStatus.noError'\n        );\n        break;\n      case DocumentStatus.e_corrupt_file:\n        content = translate(\n          'digitalSignatureVerification.documentStatus.corruptFile'\n        );\n        break;\n      case DocumentStatus.e_unsigned:\n        content = translate(\n          'digitalSignatureVerification.documentStatus.unsigned'\n        );\n        break;\n      case DocumentStatus.e_bad_byteranges:\n        content = translate(\n          'digitalSignatureVerification.documentStatus.badByteRanges'\n        );\n        break;\n      case DocumentStatus.e_corrupt_cryptographic_contents:\n        content = translate(\n          'digitalSignatureVerification.documentStatus.corruptCryptographicContents'\n        );\n        break;\n    }\n\n    return <p>{content}</p>;\n  };\n\n  const renderDigestStatus = () => {\n    let content;\n\n    switch (digestStatus) {\n      case DigestStatus.e_digest_invalid:\n        content = translate(\n          'digitalSignatureVerification.digestStatus.digestInvalid'\n        );\n        break;\n      case DigestStatus.e_digest_verified:\n        content = translate(\n          'digitalSignatureVerification.digestStatus.digestVerified'\n        );\n        break;\n      case DigestStatus.e_digest_verification_disabled:\n        content = translate(\n          'digitalSignatureVerification.digestStatus.digestVerificationDisabled'\n        );\n        break;\n      case DigestStatus.e_weak_digest_algorithm_but_digest_verifiable:\n        content = translate(\n          'digitalSignatureVerification.digestStatus.weakDigestAlgorithmButDigestVerifiable'\n        );\n        break;\n      case DigestStatus.e_no_digest_status:\n        content = translate(\n          'digitalSignatureVerification.digestStatus.noDigestStatus'\n        );\n        break;\n      case DigestStatus.e_unsupported_encoding:\n        content = translate(\n          'digitalSignatureVerification.digestStatus.unsupportedEncoding'\n        );\n        break;\n    }\n\n    return <p>{content}</p>;\n  };\n\n  const renderTrustStatus = () => {\n    const verificationType = isCertification\n      ? translate('digitalSignatureVerification.certifier')\n      : translate('digitalSignatureVerification.signer');\n    let content;\n\n    switch (trustStatus) {\n      case TrustStatus.e_trust_verified:\n        content = translate(\n          'digitalSignatureVerification.trustStatus.trustVerified',\n          { verificationType },\n        );\n        break;\n      case TrustStatus.e_untrusted:\n        content = translate(\n          'digitalSignatureVerification.trustStatus.untrusted'\n        );\n        break;\n      case TrustStatus.e_trust_verification_disabled:\n        content = translate(\n          'digitalSignatureVerification.trustStatus.trustVerificationDisabled'\n        );\n        break;\n      case TrustStatus.e_no_trust_status:\n        content = translate(\n          'digitalSignatureVerification.trustStatus.noTrustStatus'\n        );\n        break;\n    }\n\n    return <p>{content}</p>;\n  };\n\n  const renderDocumentIntegrityHeader = () => (\n    <p\n      className=\"header\"\n    >\n      {translate('digitalSignatureModal.header.documentIntegrity')}\n    </p>\n  );\n\n  const renderIdentitiesTrustHeader = () => (\n    <p\n      className=\"header\"\n    >\n      {translate('digitalSignatureModal.header.identitiesTrust')}\n    </p>\n  );\n\n  const renderGeneralErrorsHeader = () => (\n    <p\n      className=\"header\"\n    >\n      {translate('digitalSignatureModal.header.generalErrors')}\n    </p>\n  );\n\n  const renderDigestStatusHeader = () => (\n    <p\n      className=\"header\"\n    >\n      {translate('digitalSignatureModal.header.digestStatus')}\n    </p>\n  );\n\n  const renderModalBody = () => {\n    if (typeof verificationStatus === 'undefined') {\n      return (\n        <div className=\"center\">\n          <Spinner />\n        </div>\n      );\n    }\n    return (\n      <>\n        <div className=\"body\">\n          <div className=\"section\">\n            {renderDocumentIntegrityHeader()}\n            {\n              renderPermissionStatus({\n                isCertification,\n                ModificationPermissionsStatus,\n                permissionStatus,\n                translate,\n                digestStatus,\n                DigestStatusErrorCodes: DigestStatus,\n              })\n            }\n            {renderDocumentPermission()}\n          </div>\n          <div className=\"section\">\n            {renderIdentitiesTrustHeader()}\n            {renderTrustStatus()}\n            {renderTrustVerification()}\n          </div>\n          <div className=\"section\">\n            {renderGeneralErrorsHeader()}\n            {renderDocumentStatus()}\n          </div>\n          <div className=\"section\">\n            {renderDigestStatusHeader()}\n            {renderDigestStatus()}\n            {renderDigestAlgorithm()}\n          </div>\n        </div>\n        <div className=\"modal-footer\">\n          <Button\n            className=\"close-modal-button\"\n            onClick={closeModal}\n            label={translate('action.close')}\n          />\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <div\n      className={classNames({\n        Modal: true,\n        SignatureValidationModal: true,\n        open: isOpen,\n        closed: !isOpen,\n      })}\n      data-element={DataElements.SIGNATURE_VALIDATION_MODAL}\n    >\n      <ModalWrapper\n        title={renderHeaderTitle()}\n        closeHandler={closeModal}\n        onCloseClick={closeModal}\n        isOpen={isOpen}\n        swipeToClose\n      >\n        <div className=\"container\">\n          {renderSignatureSummary()}\n          {renderModalBody()}\n        </div>\n      </ModalWrapper>\n    </div>\n  );\n};\n\nexport default SignatureValidationModal;\n","import SignatureValidationModal from './SignatureValidationModal';\n\nexport default SignatureValidationModal;\n"],"sourceRoot":""}