{"version":3,"sources":["webpack:///./src/ui/src/components/ModularComponents/PresetButton/buttons/SheetEditor/CellDecoratorButton.js"],"names":["propTypes","styleType","PropTypes","oneOf","Object","values","STYLE_TOGGLE_OPTIONS","isRequired","isFlyoutItem","bool","dataElement","string","style","object","className","img","title","CellDecoratorButton","forwardRef","props","ref","menuItem","menuItems","concat","_props$dataElement","_props$img","icon","_props$title","isActive","useSelector","state","selectors","getActiveCellRangeFontStyle","handleClick","setCellFontStyle","_defineProperty","React","createElement","FlyoutItemContainer","_extends","onClick","additionalClass","ActionButton","ariaCurrent","displayName"],"mappings":"4nCAUA,IAAMA,EAAY,CAChBC,UAAWC,IAAUC,MAAMC,OAAOC,OAAOC,MAAuBC,WAChEC,aAAcN,IAAUO,KACxBC,YAAaR,IAAUS,OACvBC,MAAOV,IAAUW,OACjBC,UAAWZ,IAAUS,OACrBI,IAAKb,IAAUS,OACfK,MAAOd,IAAUS,QAGbM,EAAsBC,sBAAW,SAACC,EAAOC,GAC7C,IAAQZ,EAA8CW,EAA9CX,aAAcP,EAAgCkB,EAAhClB,UAAWW,EAAqBO,EAArBP,MAAOE,EAAcK,EAAdL,UAClCO,EAAWC,IAAU,GAADC,OAAItB,EAAS,WACvCuB,EAIIL,EAHFT,mBAAW,IAAAc,EAAGH,EAASX,YAAWc,EAAAC,EAGhCN,EAFFJ,IAAKW,OAAI,IAAAD,EAAGJ,EAASK,KAAID,EAAAE,EAEvBR,EADFH,aAAK,IAAAW,EAAGN,EAASL,MAAKW,EAGlBC,EADmBC,aAAY,SAACC,GAAK,OAAKC,IAAUC,4BAA4BF,EAAO7B,MAGvFgC,EAAc,WAClBC,YAAgBC,EAAC,GAAGlC,GAAa2B,KAGnC,OACEpB,EACE4B,IAAAC,cAACC,IAAmBC,EAAA,GACdpB,EAAK,CACTC,IAAKA,EACLoB,QAASP,EACTQ,gBAAiBb,EAAW,SAAW,MAGvCQ,IAAAC,cAACK,IAAY,CACXC,YAAaf,EACbA,SAAUA,EACVlB,YAAaA,EACbM,MAAOA,EACPD,IAAKW,EACLc,QAASP,EACTrB,MAAOA,EACPE,UAAWA,OAMrBG,EAAoBjB,UAAYA,EAChCiB,EAAoB2B,YAAc,sBAEnB3B","file":"chunks/chunk.90.js","sourcesContent":["import React, { forwardRef } from 'react';\nimport ActionButton from 'components/ActionButton';\nimport PropTypes from 'prop-types';\nimport { STYLE_TOGGLE_OPTIONS } from 'constants/customizationVariables';\nimport FlyoutItemContainer from '../../../FlyoutItemContainer';\nimport { menuItems } from '../../../Helpers/menuItems';\nimport { useSelector } from 'react-redux';\nimport selectors from 'selectors';\nimport setCellFontStyle from 'src/helpers/setCellFontStyle';\n\nconst propTypes = {\n  styleType: PropTypes.oneOf(Object.values(STYLE_TOGGLE_OPTIONS)).isRequired,\n  isFlyoutItem: PropTypes.bool,\n  dataElement: PropTypes.string,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  img: PropTypes.string,\n  title: PropTypes.string,\n};\n\nconst CellDecoratorButton = forwardRef((props, ref) => {\n  const { isFlyoutItem, styleType, style, className } = props;\n  const menuItem = menuItems[`${styleType}Button`];\n  const {\n    dataElement = menuItem.dataElement,\n    img: icon = menuItem.icon,\n    title = menuItem.title,\n  } = props;\n  const currentFontStyle = useSelector((state) => selectors.getActiveCellRangeFontStyle(state, styleType));\n  const isActive = currentFontStyle;\n\n  const handleClick = () => {\n    setCellFontStyle({ [styleType]: !isActive });\n  };\n\n  return (\n    isFlyoutItem ?\n      <FlyoutItemContainer\n        {...props}\n        ref={ref}\n        onClick={handleClick}\n        additionalClass={isActive ? 'active' : ''}\n      />\n      : (\n        <ActionButton\n          ariaCurrent={isActive}\n          isActive={isActive}\n          dataElement={dataElement}\n          title={title}\n          img={icon}\n          onClick={handleClick}\n          style={style}\n          className={className}\n        />\n      )\n  );\n});\n\nCellDecoratorButton.propTypes = propTypes;\nCellDecoratorButton.displayName = 'CellDecoratorButton';\n\nexport default CellDecoratorButton;"],"sourceRoot":""}