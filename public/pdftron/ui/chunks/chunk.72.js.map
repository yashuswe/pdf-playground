{"version":3,"sources":["webpack:///./src/ui/src/components/OfficeEditorColumnsModal/OfficeEditorColumnsModal.scss?3c43","webpack:///./src/ui/src/components/OfficeEditorColumnsModal/OfficeEditorColumnsModal.scss","webpack:///./src/ui/src/hooks/useOfficeEditorColumnsModal.js","webpack:///./src/ui/src/components/OfficeEditorColumnsModal/OfficeEditorColumnsModal.js","webpack:///./src/ui/src/components/OfficeEditorColumnsModal/index.js"],"names":["api","content","__esModule","default","module","i","options","styleTag","window","isApryseWebViewerWebComponent","document","head","appendChild","webComponents","getElementsByTagName","length","findNestedWebComponents","tagName","root","elements","querySelectorAll","forEach","el","push","shadowRoot","clonedStyleTags","webComponent","onload","styleNode","innerHTML","cloneNode","exports","locals","e","t","r","Symbol","n","iterator","o","toStringTag","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","_slicedToArray","Array","isArray","_arrayWithHoles","next","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_arrayLikeToArray","toString","slice","constructor","name","from","test","useOfficeEditorColumnsModal","currentUnit","useSelector","selectors","getOfficeEditorUnitMeasurement","_useState2","useState","initialUnit","setInitialUnit","_useState4","columnAmount","setColumnAmount","_useState6","columns","setColumns","_useState8","inputColumns","setInputColumns","_useState0","equalColumns","setEqualColumns","_useState10","availablePageWidth","setAvailablePageWidth","_useState12","maxAllowedColumns","setMaxAllowedColumns","useEffect","_ref","_callee","pageNumber","_core$getOfficeEditor","pageWidthInCurrentUnit","margins","sectionColumns","parsedColumns","allColumnsEqual","_context","core","getOfficeEditor","getEditingPageNumber","getPageDimensions","width","getSectionMargins","getSectionColumns","parseColumns","checkEqualColumnWidths","left","right","Math","ceil","formatColumns","arguments","apply","_next","_throw","setInitialData","convertMeasurementUnit","convertedColumns","map","column","spacing","unit","formattedColumns","_sectionColumns","getDefaultColumnSpacing","formatToDecimalString","floor","getMinimumColumnWidth","rebalanceColumnWidthAndSpacingEvenly","addOrRemoveColumns","newColumnAmount","prevColumns","newColumns","_toConsumableArray","columnCount","referenceSpacing","singleColumn","spacingCount","newTotalSpacing","newTotalWidth","minRequiredSpace","extraWidthNeeded","floorNumberToDecimals","fill","max","handleColumnAmountChange","parseInt","isNaN","handleColumnChange","index","type","updatedColumns","COLUMN_INPUT_TYPES","WIDTH","SPACING","handleColumnBlur","minimumColumnWidth","maxColumnWidth","maxColumnSpacing","minimumValue","maxValue","newValue","parseFloat","initialColumns","availableSpacing","newSpacing","availableWidth","newWidth","lastColumnSpacing","excessAmount","reduce","acc","modifiedResults","modifyColumns","startIndex","endIndex","numberOfColumns","nextColumns","excessAmountRemaining","modifyColumnsInReverse","skipIndex","rebalanceInputs","min","handleColumnAmountBlur","toggleEqualColumns","onApply","columnsData","pop","setCustomSectionColumns","OfficeEditorColumnsModal","useTranslation","dispatch","useDispatch","columnTranslation","concat","OFFICE_EDITOR_TRANSLATION_PREFIX","_useOfficeEditorColum","closeModal","actions","closeElement","DataElements","OFFICE_EDITOR_COLUMNS_MODAL","closeModalAndFocus","focusContent","applyAndClose","inputElements","values","inputType","id","label","onChange","onBlur","React","createElement","className","data-element","ModalWrapper","title","closehandler","onCloseClick","swipeToClose","isOpen","htmlFor","Input","target","valueAsNumber","step","Dropdown","dataElement","OFFICE_EDITOR_COLUMN_UNIT","labelledById","items","LAYOUT_UNITS","onClickItem","setOfficeEditorUnitMeasurement","getKey","item","currentSelectionKey","columnIndex","columnNumber","key","input","isLastColumn","isSpacingInput","shouldRender","shouldDisable","aria-label","disabled","Choice","checked","aria-checked","Button","onClick"],"mappings":"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","file":"chunks/chunk.72.js","sourcesContent":["var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./OfficeEditorColumnsModal.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(styleTag) {\n                function findNestedWebComponents(tagName, root = document) {\n                  const elements = [];\n\n                  // Check direct children\n                  root.querySelectorAll(tagName).forEach((el) => elements.push(el));\n\n                  // Check shadow DOMs\n                  root.querySelectorAll('*').forEach((el) => {\n                    if (el.shadowRoot) {\n                      elements.push(...findNestedWebComponents(tagName, el.shadowRoot));\n                    }\n                  });\n\n                  return elements;\n                }\n                if (!window.isApryseWebViewerWebComponent) {\n                  document.head.appendChild(styleTag);\n                  return;\n                }\n\n                let webComponents;\n                // First we see if the webcomponent is at the document level\n                webComponents = document.getElementsByTagName('apryse-webviewer');\n                // If not, we check have to check if it is nested in another webcomponent\n                if (!webComponents.length) {\n                  webComponents = findNestedWebComponents('apryse-webviewer');\n                }\n                // Now we append the style tag to each webcomponent\n                const clonedStyleTags = [];\n                for (let i = 0; i < webComponents.length; i++) {\n                  const webComponent = webComponents[i];\n                  if (i === 0) {\n                    webComponent.shadowRoot.appendChild(styleTag);\n                    styleTag.onload = function() {\n                      if (clonedStyleTags.length > 0) {\n                        clonedStyleTags.forEach((styleNode) => {\n                          // eslint-disable-next-line no-unsanitized/property\n                          styleNode.innerHTML = styleTag.innerHTML;\n                        });\n                      }\n                    };\n                  } else {\n                    const styleNode = styleTag.cloneNode(true);\n                    webComponent.shadowRoot.appendChild(styleNode);\n                    clonedStyleTags.push(styleNode);\n                  }\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".open.OfficeEditorColumnsModal{visibility:visible}.closed.OfficeEditorColumnsModal{visibility:hidden}:host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.OfficeEditorColumnsModal .footer .modal-button.confirm:hover{background:var(--primary-button-hover);border-color:var(--primary-button-hover);color:var(--gray-0)}.OfficeEditorColumnsModal .footer .modal-button.confirm{background:var(--primary-button);border-color:var(--primary-button);color:var(--primary-button-text)}.OfficeEditorColumnsModal .footer .modal-button.confirm.disabled{cursor:default;background:var(--disabled-button-color);color:var(--primary-button-text)}.OfficeEditorColumnsModal .footer .modal-button.confirm.disabled span{color:var(--primary-button-text)}.OfficeEditorColumnsModal .footer .modal-button.cancel:hover,.OfficeEditorColumnsModal .footer .modal-button.secondary-btn-custom:hover{border:none;box-shadow:inset 0 0 0 1px var(--blue-6);color:var(--blue-6)}.OfficeEditorColumnsModal .footer .modal-button.cancel,.OfficeEditorColumnsModal .footer .modal-button.secondary-btn-custom{border:none;box-shadow:inset 0 0 0 1px var(--primary-button);color:var(--primary-button)}.OfficeEditorColumnsModal .footer .modal-button.cancel.disabled,.OfficeEditorColumnsModal .footer .modal-button.secondary-btn-custom.disabled{cursor:default;border:none;box-shadow:inset 0 0 0 1px rgba(43,115,171,.5);color:rgba(43,115,171,.5)}.OfficeEditorColumnsModal .footer .modal-button.cancel.disabled span,.OfficeEditorColumnsModal .footer .modal-button.secondary-btn-custom.disabled span{color:rgba(43,115,171,.5)}.OfficeEditorColumnsModal{position:fixed;inset-inline-start:0;inset-block-end:0;z-index:100;width:100%;height:100%;display:flex;justify-content:center;align-items:center;background:var(--modal-negative-space)}.OfficeEditorColumnsModal .modal-container .wrapper .modal-content{padding:10px}.OfficeEditorColumnsModal .footer{flex-direction:row;width:100%;margin-top:13px}.OfficeEditorColumnsModal .footer.modal-footer{padding:16px;margin:0;border-top:1px solid var(--divider)}.OfficeEditorColumnsModal .footer .modal-button{display:flex;justify-content:center;align-items:center;padding:6px 18px;margin:8px 0 0;width:auto;width:-moz-fit-content;width:fit-content;border-radius:4px;height:30px;cursor:pointer}.OfficeEditorColumnsModal .footer .modal-button.confirm{margin-inline-start:4px}.OfficeEditorColumnsModal .footer .modal-button.secondary-btn-custom{border-radius:4px;padding:2px 20px 4px;cursor:pointer}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .OfficeEditorColumnsModal .footer .modal-button{padding:23px 8px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .OfficeEditorColumnsModal .footer .modal-button{padding:23px 8px}}.OfficeEditorColumnsModal .swipe-indicator{background:var(--swipe-indicator-bg);border-radius:2px;height:4px;width:38px;position:absolute;inset-block-start:12px;margin-inline-start:auto;margin-inline-end:auto;inset-inline-start:0;inset-inline-end:0}@media(min-width:641px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .OfficeEditorColumnsModal .swipe-indicator{display:none}}@container (min-width: 641px){.App.is-web-component:not(.is-in-desktop-only-mode) .OfficeEditorColumnsModal .swipe-indicator{display:none}}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .OfficeEditorColumnsModal .swipe-indicator{width:32px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .OfficeEditorColumnsModal .swipe-indicator{width:32px}}.OfficeEditorColumnsModal{flex-direction:column}.OfficeEditorColumnsModal .modal-container{display:flex;flex-direction:column;height:auto;width:480px}.OfficeEditorColumnsModal .modal-body{padding:16px;display:flex;flex-direction:row;flex-wrap:wrap;font-size:var(--font-size-default);font-family:var(--font-family);grid-gap:16px;gap:16px}.OfficeEditorColumnsModal .modal-body .title{line-height:16px;font-weight:var(--font-weight-bold)}.OfficeEditorColumnsModal .input-container{display:flex;flex-direction:column;grid-gap:8px;gap:8px}.OfficeEditorColumnsModal .input-container .modal-label{color:var(--gray-12)}.OfficeEditorColumnsModal .input-container .ui__input__wrapper{width:auto;max-width:216px}.OfficeEditorColumnsModal .input-container .ui__input{border-color:var(--gray-6);position:relative}.OfficeEditorColumnsModal .input-container .ui__input.ui__input--focused{box-shadow:none;border-color:var(--focus-border)}.OfficeEditorColumnsModal .input-container .ui__input[\\\\:has\\\\(\\\\:disabled\\\\)]{border-color:var(--gray-5)}.OfficeEditorColumnsModal .input-container .ui__input:has(:disabled){border-color:var(--gray-5)}.OfficeEditorColumnsModal .input-container input{padding:8px 40px 8px 8px;height:32px;font-size:var(--font-size-default);width:100%}.OfficeEditorColumnsModal .input-container input[type=number]{-moz-appearance:textfield}.OfficeEditorColumnsModal .input-container input:disabled{opacity:1}.OfficeEditorColumnsModal .input-container input::-webkit-inner-spin-button,.OfficeEditorColumnsModal .input-container input::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.OfficeEditorColumnsModal .flex-half{flex-basis:calc(50% - 8px)}.OfficeEditorColumnsModal .flex-full{flex-basis:100%}.OfficeEditorColumnsModal .flex-third{flex-basis:calc(33.33333% - 8px)}.OfficeEditorColumnsModal .footer{padding:16px;display:flex;justify-content:flex-end;border-top:1px solid var(--gray-5)}.OfficeEditorColumnsModal .footer button{border:none;border-radius:4px;background:var(--primary-button);min-width:59px;width:auto;padding:8px 16px;height:32px;color:var(--primary-button-text)}.OfficeEditorColumnsModal .footer button:hover{background:var(--primary-button-hover)}.OfficeEditorColumnsModal .unit-dropdown.Dropdown{height:34px}.OfficeEditorColumnsModal .unit-dropdown .Dropdown__items{width:100%}.OfficeEditorColumnsModal .input-container .ui__input input[type=number].column-amount-input{-moz-appearance:auto;padding-inline-end:8px}.OfficeEditorColumnsModal .input-container .ui__input input.column-amount-input::-webkit-inner-spin-button,.OfficeEditorColumnsModal .input-container .ui__input input.column-amount-input::-webkit-outer-spin-button{-webkit-appearance:auto}.OfficeEditorColumnsModal .section{width:100%;border-top:1px solid var(--gray-5)}.OfficeEditorColumnsModal .section .section-label{font-weight:var(--font-weight-bold);padding:2px 0;margin:16px 0}.OfficeEditorColumnsModal .section .row{display:flex;align-items:center;grid-gap:8px;gap:8px}.OfficeEditorColumnsModal .section .row.columns-headers{padding:2px 0;margin-bottom:8px}.OfficeEditorColumnsModal .section .columns-container{height:156px;background-color:var(--gray-2);overflow:auto;border:1px solid var(--gray-5)}.OfficeEditorColumnsModal .section .columns-container .row{background-color:var(--gray-0);padding:7px}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport selectors from 'selectors';\nimport core from 'core';\nimport {\n  formatToDecimalString,\n  getMinimumColumnWidth,\n  getDefaultColumnSpacing,\n  convertMeasurementUnit,\n  floorNumberToDecimals,\n} from 'helpers/officeEditor';\nimport {\n  modifyColumns,\n  modifyColumnsInReverse,\n  checkEqualColumnWidths,\n} from 'helpers/officeEditorColumnsHelper';\nimport {\n  COLUMN_INPUT_TYPES,\n} from 'constants/officeEditor';\n\nexport const useOfficeEditorColumnsModal = () => {\n  const currentUnit = useSelector(selectors.getOfficeEditorUnitMeasurement);\n  const [initialUnit, setInitialUnit] = useState(currentUnit);\n  const [columnAmount, setColumnAmount] = useState(0);\n  const [columns, setColumns] = useState([]); // [{ width: 0, spacing: 0 }]\n  const [inputColumns, setInputColumns] = useState([]); // [{ width: 0, spacing: 0 }]\n  const [equalColumns, setEqualColumns] = useState(true);\n  const [availablePageWidth, setAvailablePageWidth] = useState(0);\n  const [maxAllowedColumns, setMaxAllowedColumns] = useState(0);\n\n  useEffect(() => {\n    const setInitialData = async () => {\n      const pageNumber = await core.getOfficeEditor().getEditingPageNumber();\n      const { width: pageWidthInCurrentUnit } = core.getOfficeEditor().getPageDimensions(pageNumber, currentUnit);\n\n      const margins = await core.getOfficeEditor().getSectionMargins(currentUnit);\n      const sectionColumns = await core.getOfficeEditor().getSectionColumns(currentUnit);\n      const parsedColumns = parseColumns(sectionColumns, currentUnit);\n      const allColumnsEqual = checkEqualColumnWidths(sectionColumns);\n\n      setInitialUnit(currentUnit);\n      setAvailablePageWidth(pageWidthInCurrentUnit - margins.left - margins.right);\n      setColumnAmount(Math.ceil(sectionColumns.length / 2));\n      setEqualColumns(allColumnsEqual);\n      setColumns(parsedColumns);\n      setInputColumns(formatColumns(parsedColumns));\n    };\n    setInitialData();\n  }, []);\n\n  useEffect(() => {\n    if (currentUnit === initialUnit) {\n      return;\n    }\n    setInitialUnit(currentUnit);\n\n    const pageWidthInCurrentUnit = convertMeasurementUnit(availablePageWidth, initialUnit, currentUnit);\n    setAvailablePageWidth(pageWidthInCurrentUnit);\n\n    const convertedColumns = columns.map((column) => ({\n      width: convertMeasurementUnit(column.width, initialUnit, currentUnit),\n      spacing: convertMeasurementUnit(column.spacing, initialUnit, currentUnit),\n    }));\n    setColumns(convertedColumns);\n    setInputColumns(formatColumns(convertedColumns));\n  }, [currentUnit, initialUnit]);\n\n  const parseColumns = (sectionColumns, unit) => {\n    let formattedColumns = [];\n    for (let i = 0; i < sectionColumns.length; i += 2) {\n      const width = sectionColumns[i];\n      const spacing = sectionColumns[i + 1] ?? getDefaultColumnSpacing(unit);\n      formattedColumns.push({ width, spacing });\n    }\n    return formattedColumns;\n  };\n\n  const formatColumns = (columns) => {\n    return columns.map((column) => ({\n      width: formatToDecimalString(column.width),\n      spacing: formatToDecimalString(column.spacing),\n    }));\n  };\n\n  useEffect(() => {\n    setMaxAllowedColumns(Math.floor(availablePageWidth / getMinimumColumnWidth(currentUnit)));\n  }, [availablePageWidth, currentUnit]);\n\n  useEffect(() => {\n    if (columns.length < 1) {\n      return;\n    }\n    if (equalColumns) {\n      rebalanceColumnWidthAndSpacingEvenly(columns);\n    }\n  }, [equalColumns, columns.length, availablePageWidth]);\n\n  const handleColumnAmountChange = (value) => {\n    if (value === '') {\n      setColumnAmount(value);\n      return;\n    }\n\n    let newColumnAmount = parseInt(value);\n    if (newColumnAmount === 0) {\n      setColumnAmount(newColumnAmount);\n      return;\n    }\n\n    if (isNaN(newColumnAmount) || newColumnAmount < 0) {\n      newColumnAmount = 1;\n    }\n\n    if (newColumnAmount > maxAllowedColumns) {\n      newColumnAmount = maxAllowedColumns;\n    }\n\n    setColumnAmount(newColumnAmount);\n\n    const newColumns = addOrRemoveColumns(newColumnAmount, columns);\n    setColumns(newColumns);\n    setInputColumns(formatColumns(newColumns));\n    rebalanceColumnWidthAndSpacingEvenly(newColumns);\n  };\n\n  const addOrRemoveColumns = (newColumnAmount, prevColumns) => {\n    if (newColumnAmount === prevColumns.length) {\n      return prevColumns;\n    }\n\n    if (newColumnAmount < prevColumns.length) {\n      return prevColumns.slice(0, newColumnAmount);\n    }\n\n    // Add columns if new amount is more than current amount\n    const newColumns = [...prevColumns];\n    for (let i = prevColumns.length + 1; i <= newColumnAmount; i++) {\n      newColumns.push({\n        width: 0,\n        spacing: getDefaultColumnSpacing(currentUnit),\n      });\n    }\n    return newColumns;\n  };\n\n  const rebalanceColumnWidthAndSpacingEvenly = (columns) => {\n    const columnCount = columns.length;\n    let referenceSpacing = columns[0].spacing;\n    if (columnCount === 1) {\n      const singleColumn = [{\n        width: availablePageWidth,\n        spacing: referenceSpacing,\n      }];\n      setColumns(singleColumn);\n      setInputColumns(formatColumns(singleColumn));\n      return;\n    }\n\n    const spacingCount = columnCount - 1;\n    let newTotalSpacing = spacingCount * referenceSpacing;\n    let newTotalWidth = availablePageWidth - newTotalSpacing;\n    const minRequiredSpace = getMinimumColumnWidth(currentUnit) * columnCount;\n    if (newTotalWidth < minRequiredSpace) {\n      const extraWidthNeeded = minRequiredSpace - newTotalWidth;\n      newTotalWidth += extraWidthNeeded;\n      newTotalSpacing -= extraWidthNeeded;\n      referenceSpacing = floorNumberToDecimals(newTotalSpacing / spacingCount);\n    }\n    const newColumns = new Array(columnCount).fill().map(() => ({\n      width: floorNumberToDecimals(newTotalWidth / columnCount),\n      spacing: Math.max(referenceSpacing, 0),\n    }));\n    setColumns(newColumns);\n    setInputColumns(formatColumns(newColumns));\n  };\n\n  const handleColumnChange = (value, index, type) => {\n    const updatedColumns = [...inputColumns];\n    updatedColumns[index] = {\n      width: (type === COLUMN_INPUT_TYPES.WIDTH ? value : updatedColumns[index].width).toString(),\n      spacing: (type === COLUMN_INPUT_TYPES.SPACING ? value : updatedColumns[index].spacing).toString(),\n    };\n    setInputColumns(updatedColumns);\n  };\n\n  const handleColumnAmountBlur = (value) => {\n    if (value === columns.length) {\n      return;\n    }\n    setColumnAmount(columns.length);\n  };\n\n  const rebalanceInputs = (newValue, index, type, initialColumns) => {\n    let newColumns = [...initialColumns];\n    const columnCount = initialColumns.length;\n    if (equalColumns) {\n      if (type === COLUMN_INPUT_TYPES.WIDTH) {\n        const availableSpacing = availablePageWidth - (newValue * columnCount);\n        const newSpacing = floorNumberToDecimals(availableSpacing / (columnCount - 1));\n        newColumns = newColumns.map(() => ({\n          width: newValue,\n          spacing: newSpacing,\n        }));\n      } else if (type === COLUMN_INPUT_TYPES.SPACING) {\n        const availableWidth = availablePageWidth - (newValue * (columnCount - 1));\n        const newWidth = floorNumberToDecimals(availableWidth / columnCount);\n        newColumns = newColumns.map(() => ({\n          width: newWidth,\n          spacing: newValue,\n        }));\n      }\n      return newColumns;\n    }\n\n    // Not Equal Columns\n    newColumns[index] = {\n      width: (type === COLUMN_INPUT_TYPES.WIDTH ? newValue : newColumns[index].width),\n      spacing: (type === COLUMN_INPUT_TYPES.SPACING ? newValue : newColumns[index].spacing),\n    };\n    // Calculate excess amount.\n    const lastColumnSpacing = parseFloat(newColumns[columnCount - 1].spacing);\n    const totalWidthAndSpacing = newColumns.reduce((acc, column) => acc + parseFloat(column.width) + parseFloat(column.spacing), -lastColumnSpacing); // Ignore last column spacing\n    let excessAmount = totalWidthAndSpacing - availablePageWidth;\n    let modifiedResults = {};\n\n    // take from or add to subsequent widths\n    modifiedResults = modifyColumns({\n      columns: newColumns,\n      excessAmount,\n      startIndex: index + 1,\n      endIndex: columnCount - 1,\n      numberOfColumns: columnCount - index - 1,\n      type: COLUMN_INPUT_TYPES.WIDTH\n    });\n    newColumns = [...modifiedResults.nextColumns];\n    excessAmount = modifiedResults.excessAmountRemaining;\n\n    if (excessAmount === 0) {\n      return newColumns;\n    }\n\n    if (type === COLUMN_INPUT_TYPES.WIDTH) {\n      // take from or add to spacing\n      modifiedResults = modifyColumnsInReverse({\n        columns: newColumns,\n        excessAmount,\n        startIndex: columnCount - 2,\n        endIndex: 0,\n        numberOfColumns: columnCount - 1,\n        type: COLUMN_INPUT_TYPES.SPACING\n      });\n      newColumns = [...modifiedResults.nextColumns];\n      excessAmount = modifiedResults.excessAmountRemaining;\n\n      if (excessAmount === 0) {\n        return newColumns;\n      }\n\n      // take from or add to previous widths\n      modifiedResults = modifyColumnsInReverse({\n        columns: newColumns,\n        excessAmount,\n        startIndex: index - 1,\n        endIndex: 0,\n        numberOfColumns: index,\n        type: COLUMN_INPUT_TYPES.WIDTH\n      });\n      newColumns = [...modifiedResults.nextColumns];\n      excessAmount = modifiedResults.excessAmountRemaining;\n\n      if (excessAmount === 0) {\n        return newColumns;\n      }\n    } else if (type === COLUMN_INPUT_TYPES.SPACING) {\n      // take from or add to previous widths equally\n      modifiedResults = modifyColumns({\n        columns: newColumns,\n        excessAmount,\n        startIndex: 0,\n        endIndex: index,\n        numberOfColumns: index + 1,\n        type: COLUMN_INPUT_TYPES.WIDTH\n      });\n      newColumns = [...modifiedResults.nextColumns];\n      excessAmount = modifiedResults.excessAmountRemaining;\n\n      if (excessAmount === 0) {\n        return newColumns;\n      }\n\n      // take from or add to spacing, other than index\n      modifiedResults = modifyColumnsInReverse({\n        columns: newColumns,\n        excessAmount,\n        startIndex: columnCount - 2,\n        endIndex: 0,\n        numberOfColumns: columnCount - 2,\n        type: COLUMN_INPUT_TYPES.SPACING,\n        skipIndex: index\n      });\n      newColumns = [...modifiedResults.nextColumns];\n    }\n    return newColumns;\n  };\n\n  const handleColumnBlur = (value, index, type) => {\n    // Validate input limits\n    const columnCount = columns.length;\n    const minimumColumnWidth = getMinimumColumnWidth(currentUnit);\n    const maxColumnWidth = (equalColumns) ?\n      availablePageWidth / columnCount :\n      availablePageWidth - ((columnCount - 1) * minimumColumnWidth);\n\n    const maxColumnSpacing = (equalColumns) ?\n      (availablePageWidth - (minimumColumnWidth * columnCount)) / (columnCount - 1) :\n      availablePageWidth - (minimumColumnWidth * columnCount);\n\n    const minimumValue = (type === COLUMN_INPUT_TYPES.WIDTH) ? minimumColumnWidth : 0;\n    const maxValue = (type === COLUMN_INPUT_TYPES.WIDTH) ? maxColumnWidth : maxColumnSpacing;\n\n    let newValue = parseFloat(value);\n    if (isNaN(newValue) || newValue < minimumValue) {\n      newValue = minimumValue;\n    }\n    newValue = Math.min(newValue, maxValue);\n\n    const newColumns = rebalanceInputs(newValue, index, type, columns);\n    setColumns(newColumns);\n    setInputColumns(formatColumns(newColumns));\n  };\n\n  const toggleEqualColumns = () => {\n    setEqualColumns(!equalColumns);\n  };\n\n  const onApply = () => {\n    const columnsData = columns.reduce((acc, column) => {\n      acc.push(parseFloat(column.width), parseFloat(column.spacing));\n      return acc;\n    }, []);\n    columnsData.pop(); // Remove the last spacing value\n    core.getOfficeEditor().setCustomSectionColumns(columnsData, currentUnit);\n  };\n\n  return {\n    columnAmount,\n    inputColumns,\n    equalColumns,\n    maxAllowedColumns,\n    currentUnit,\n    handleColumnAmountChange,\n    handleColumnChange,\n    handleColumnBlur,\n    handleColumnAmountBlur,\n    toggleEqualColumns,\n    onApply,\n  };\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport actions from 'actions';\nimport DataElements from 'constants/dataElement';\nimport Button from 'components/Button';\nimport ModalWrapper from 'components/ModalWrapper';\nimport Dropdown from 'components/Dropdown';\nimport { Choice, Input } from '@pdftron/webviewer-react-toolkit';\nimport { focusContent } from 'helpers/officeEditor';\nimport { useOfficeEditorColumnsModal } from 'hooks/useOfficeEditorColumnsModal';\nimport {\n  OFFICE_EDITOR_TRANSLATION_PREFIX,\n  LAYOUT_UNITS,\n  COLUMN_INPUT_TYPES,\n} from 'constants/officeEditor';\n\nimport './OfficeEditorColumnsModal.scss';\n\nconst OfficeEditorColumnsModal = () => {\n  const [t] = useTranslation();\n  const dispatch = useDispatch();\n  const columnTranslation = t(`${OFFICE_EDITOR_TRANSLATION_PREFIX}column`);\n\n  const {\n    columnAmount,\n    inputColumns,\n    equalColumns,\n    maxAllowedColumns,\n    currentUnit,\n    handleColumnAmountChange,\n    handleColumnChange,\n    handleColumnBlur,\n    handleColumnAmountBlur,\n    toggleEqualColumns,\n    onApply,\n  } = useOfficeEditorColumnsModal();\n\n  const handleUnitChange = (unit) => dispatch(actions.setOfficeEditorUnitMeasurement(unit));\n  const closeModal = () => dispatch(actions.closeElement(DataElements.OFFICE_EDITOR_COLUMNS_MODAL));\n  const closeModalAndFocus = () => {\n    closeModal();\n    focusContent();\n  };\n  const applyAndClose = async () => {\n    onApply();\n    closeModal();\n  };\n\n  const inputElements = Object.values(COLUMN_INPUT_TYPES).map((inputType) => ({\n    id: `${inputType}ColumnInput`,\n    label: t(`${OFFICE_EDITOR_TRANSLATION_PREFIX}columnsModal.${inputType}`),\n    onChange: (value, index) => handleColumnChange(value, index, inputType),\n    onBlur: (value, index) => handleColumnBlur(value, index, inputType),\n    type: inputType,\n  }));\n\n  return (\n    <div className='OfficeEditorColumnsModal' data-element={DataElements.OFFICE_EDITOR_COLUMNS_MODAL}>\n      <ModalWrapper\n        title={t(`${OFFICE_EDITOR_TRANSLATION_PREFIX}columnsModal.title`)}\n        closehandler={closeModalAndFocus}\n        onCloseClick={closeModalAndFocus}\n        swipeToClose\n        isOpen\n      >\n        <div className='modal-body'>\n          <div className='input-container flex-half'>\n            <label htmlFor='columnAmountInput' className='modal-label'>{t(`${OFFICE_EDITOR_TRANSLATION_PREFIX}columnsModal.columnAmount`)}</label>\n            <Input\n              type='number'\n              id='columnAmountInput'\n              onBlur={(e) => handleColumnAmountBlur(e.target.valueAsNumber)}\n              onChange={(e) => handleColumnAmountChange(e.target.value)}\n              value={columnAmount}\n              min='1'\n              max={maxAllowedColumns}\n              step='1'\n              className='column-amount-input'\n            />\n          </div>\n\n          <div className='input-container flex-half'>\n            <label id='office-editor-column-unit-label' className='modal-label'>\n              {t(`${OFFICE_EDITOR_TRANSLATION_PREFIX}unitMeasurement`)}\n            </label>\n            <Dropdown\n              id='office-editor-column-unit'\n              dataElement={DataElements.OFFICE_EDITOR_COLUMN_UNIT}\n              labelledById='office-editor-column-unit-label'\n              className={'unit-dropdown'}\n              items={Object.values(LAYOUT_UNITS)}\n              onClickItem={handleUnitChange}\n              getKey={(item) => item}\n              currentSelectionKey={currentUnit}\n              width={'auto'}\n            />\n          </div>\n\n          <div className='section'>\n            <div className='section-label'>{t(`${OFFICE_EDITOR_TRANSLATION_PREFIX}columnsModal.widthAndSpacing`)}</div>\n            <div className='columns-headers row'>\n              <div className='flex-third'>{t(`${OFFICE_EDITOR_TRANSLATION_PREFIX}columnsModal.columnNumber`)}</div>\n              <div className='flex-third'>{t(`${OFFICE_EDITOR_TRANSLATION_PREFIX}columnsModal.width`)}</div>\n              <div className='flex-third'>{t(`${OFFICE_EDITOR_TRANSLATION_PREFIX}columnsModal.spacing`)}</div>\n            </div>\n            <div className='columns-container'>\n              {inputColumns.map((column, columnIndex) => {\n                const columnNumber = columnIndex + 1;\n                return <div key={columnNumber} className='row'>\n                  <div className='row-label flex-third'>\n                    {columnTranslation} {columnNumber}\n                  </div>\n                  {inputElements.map((input) => {\n                    const isLastColumn = columnIndex === inputColumns.length - 1;\n                    const isSpacingInput = input.type === COLUMN_INPUT_TYPES.SPACING;\n                    const shouldRender = !(isLastColumn && isSpacingInput);\n                    const shouldDisable = inputColumns.length === 1 || (equalColumns && columnNumber !== 1);\n                    return shouldRender &&\n                      <div key={`${columnNumber} ${input.id}`} className='input-container flex-third'>\n                        <Input\n                          type='number'\n                          id={`${input.id}-${columnNumber}`}\n                          onChange={(e) => input.onChange(e.target.value, columnIndex)}\n                          onBlur={(e) => input.onBlur(e.target.valueAsNumber, columnIndex)}\n                          value={column[input.type]}\n                          aria-label={`${columnTranslation} ${columnNumber} ${input.label}`}\n                          disabled={shouldDisable}\n                          min='0'\n                          step='0.1'\n                        />\n                      </div>;\n                  })}\n                </div>;\n              })}\n            </div>\n          </div>\n          <Choice\n            id={'equal-columns-checkbox'}\n            label={t(`${OFFICE_EDITOR_TRANSLATION_PREFIX}columnsModal.equalColumns`)}\n            aria-label={t(`${OFFICE_EDITOR_TRANSLATION_PREFIX}columnsModal.equalColumns`)}\n            checked={equalColumns}\n            aria-checked={equalColumns}\n            onChange={toggleEqualColumns}\n          />\n        </div>\n        <div className='footer'>\n          <Button onClick={applyAndClose} label={t('action.apply')} />\n        </div>\n      </ModalWrapper>\n    </div>\n  );\n};\n\nexport default OfficeEditorColumnsModal;\n","import OfficeEditorColumnsModal from './OfficeEditorColumnsModal';\n\nexport default OfficeEditorColumnsModal;\n"],"sourceRoot":""}